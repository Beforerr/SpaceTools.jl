var documenterSearchIndex = {"docs":
[{"location":"examples/interactive/#Basic-interactive-tplot","page":"Basic interactive tplot","title":"Basic interactive tplot","text":"","category":"section"},{"location":"examples/interactive/#Function-as-tplot-argument","page":"Basic interactive tplot","title":"Function as tplot argument","text":"","category":"section"},{"location":"examples/interactive/","page":"Basic interactive tplot","title":"Basic interactive tplot","text":"using Dates\nusing DimensionalData\nusing SpaceTools\nusing CairoMakie\n\nt0 = DateTime(2001, 1, 1)\nt1 = DateTime(2001, 1, 2)\n\nfunction func(t0, t1)\n    x = t0:Hour(1):t1\n    y = @. sin(2pi * ((x - t0) / Day(1)))\n    DimArray(y, Ti(x))\nend\n\nf, axes = tplot(func, t0, t1)","category":"page"},{"location":"examples/interactive/#Interactive-tplot","page":"Basic interactive tplot","title":"Interactive tplot","text":"","category":"section"},{"location":"examples/interactive/","page":"Basic interactive tplot","title":"Basic interactive tplot","text":"Here we simulate a user interacting with the plot by progressively zooming out in time with tlims!.","category":"page"},{"location":"examples/interactive/","page":"Basic interactive tplot","title":"Basic interactive tplot","text":"dt = Day(1)\nrecord(f, \"interactive.mp4\", 1:5; framerate=2) do n\n    tlims!(t0, t1 + n * dt)\n    sleep(0.5)\nend;","category":"page"},{"location":"examples/interactive/","page":"Basic interactive tplot","title":"Basic interactive tplot","text":"<video autoplay loop muted playsinline controls src=\"../interactive.mp4\" />","category":"page"},{"location":"explanations/multispacecraft/#Multi-spacecraft-analysis-methods","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"","category":"section"},{"location":"explanations/multispacecraft/#Reciprocal-vectors","page":"Multi-spacecraft analysis methods","title":"Reciprocal vectors","text":"","category":"section"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"Paschmann and Daly [1], Chapter 4, Paschmann and Daly [2], Chapter 14, ","category":"page"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"SpaceTools.position_tensor\nreciprocal_vector\nreciprocal_vectors","category":"page"},{"location":"explanations/multispacecraft/#SpaceTools.position_tensor","page":"Multi-spacecraft analysis methods","title":"SpaceTools.position_tensor","text":"𝐑 = _α (𝐫_α-𝐫_b) (𝐫_α-𝐫_b) = _α 𝐫_α 𝐫_α-𝐫_b 𝐫_b\n\nwith 𝐫_b = _α 𝐫_α  N and N is the number of positions.\n\nReferences\n\nPaschmann and Daly [1] Paschmann & Daly, 2008. Section 4.7\n\n\n\n\n\n","category":"function"},{"location":"explanations/multispacecraft/#SpaceTools.reciprocal_vector","page":"Multi-spacecraft analysis methods","title":"SpaceTools.reciprocal_vector","text":"reciprocal_vector(r_βα, r_βγ, r_βλ)\n\nCompute the reciprocal vector 𝒌_α for a vertex of a tetrahedron given the relative position vectors.\n\n𝒌_α = frac𝐫_βγ  𝐫_βλ𝐫_βα  (𝐫_βγ  𝐫_βλ)\n\nwhere 𝐫_αβ = r_β - r_α are relative position vectors.\n\nReferences\n\nMulti-spacecraft analysis methods revisited : 4.3 Properties of reciprocal vectors\n\n\n\n\n\nreciprocal_vector(rα, rβ, rγ, rλ)\n\nCompute the reciprocal vector 𝒌_α for a vertex of a tetrahedron given the position vectors of all vertices.\n\nThe vertices (α, β, γ, λ) must form a cyclic permutation of (1, 2, 3, 4).\n\n\n\n\n\nreciprocal_vector(rα, r0s::AbstractVector{<:AbstractVector})\n\nGeneralised reciprocal vector for N != 4\n\n𝐪_α = 𝐑^-1 𝐫_α\n\nSee also: reciprocal_vector, position_tensor\n\n\n\n\n\n","category":"function"},{"location":"explanations/multispacecraft/#SpaceTools.reciprocal_vectors","page":"Multi-spacecraft analysis methods","title":"SpaceTools.reciprocal_vectors","text":"Compute the set of reciprocal vectors {𝒌_α}, which is also called the reciprocal base of the tetrahedron.\n\nSee also: reciprocal_vector\n\n\n\n\n\n","category":"function"},{"location":"explanations/multispacecraft/#Estimation-of-spatial-gradients","page":"Multi-spacecraft analysis methods","title":"Estimation of spatial gradients","text":"","category":"section"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"lingradest","category":"page"},{"location":"explanations/multispacecraft/#SpaceTools.lingradest","page":"Multi-spacecraft analysis methods","title":"SpaceTools.lingradest","text":"lingradest(B1, B2, B3, B4, R1, R2, R3, R4)\n\nCompute spatial derivatives such as grad, div, curl and curvature using reciprocal vector technique (linear interpolation).\n\nArguments\n\nB1, B2, B3, B4: 3-element vectors giving magnetic field measurements at each probe\nR1, R2, R3, R4: 3-element vectors giving the probe positions\n\nReturns\n\nA named tuple containing:   • Rbary: Barycenter position   • Bbc: Magnetic field at the barycenter   • Bmag: Magnetic field magnitude at the barycenter   • LGBx, LGBy, LGBz: Linear gradient estimators for each component   • LD: Linear divergence estimator   • LCB: Linear curl estimator   • curvature: Field‐line curvature vector   • R_c: Field‐line curvature radius\n\nReferences\n\nBased on the method of Chanteur (ISSI, 1998, Ch. 11).\n\nlingradest.pro\nlingradest.py\n\n\n\n\n\nlingradest(B1::MatrixLike, args...)\n\nVectorized method for simplified usage. Returns a StructArray containing the results.\n\n\n\n\n\nlingradest(B1::AbstractDimArray, args...)\n\nMethod for handling dimensional arrays. Takes AbstractDimArray inputs with a time dimension and returns a DimStack containing all computed quantities.\n\n\n\n\n\nlingradest(\n    Bx1, Bx2, Bx3, Bx4,\n    By1, By2, By3, By4,\n    Bz1, Bz2, Bz3, Bz4,\n    R1, R2, R3, R4\n)\n\nSPEDAS-argument-compatible version of lingradest.\n\n\n\n\n\n","category":"function"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"Since tildeg and tildeboldsymbolV are linear functions, the calculation of spatial derivatives, such as the gradient of some scalar function or the divergence or curl of a vector function, can be done quite easily. The results are:","category":"page"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"beginaligned\nnabla g simeq nabla tildeg  =sum_alpha=0^3 boldsymbolk_alpha g_alpha \nhatboldsymbole cdot nabla g simeq hatboldsymbole cdot nabla tildeg  =sum_alpha=0^3left(hatboldsymbole cdot boldsymbolk_alpharight) g_alpha \nnabla cdot boldsymbolV simeq nabla cdot tildeboldsymbolV  =sum_alpha=0^3 boldsymbolk_alpha cdot boldsymbolV_alpha \nnabla times boldsymbolV simeq nabla times tildeboldsymbolV  =sum_alpha=0^3 boldsymbolk_alpha times boldsymbolV_alpha\nendaligned","category":"page"},{"location":"explanations/multispacecraft/#Multi-spacecraft-timing","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft timing","text":"","category":"section"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"ConstantVelocityApproach","category":"page"},{"location":"explanations/multispacecraft/#SpaceTools.ConstantVelocityApproach","page":"Multi-spacecraft analysis methods","title":"SpaceTools.ConstantVelocityApproach","text":"CVA(positions, times)\n\nConstant Velocity Approach (CVA) for determining boundary normal and velocity. Solve timing equation: D * m = Δts\n\nParameters:\n\npositions: Positions of 4 spacecraft (4×3 array)\ntimes: Times of boundary crossing for each spacecraft\n\n\n\n\n\nConstantVelocityApproach(positions, times, durations)\n\nGiven durations of the boundary crossings, calculate the thickness of the boundary\n\n\n\n\n\n","category":"function"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"G. Paschmann and P. W. Daly. Multi-Spacecraft Analysis Methods Revisited (ESA Communications, 2008).\n\n\n\nG. Paschmann and P. W. Daly. Analysis Methods for Multi-Spacecraft Data (ESA Publications Division, 2000).\n\n\n\n","category":"page"},{"location":"examples/speasy/#Complex-requests-and-flexible-layout","page":"Complex requests and flexible layout","title":"Complex requests and flexible layout","text":"","category":"section"},{"location":"examples/speasy/","page":"Complex requests and flexible layout","title":"Complex requests and flexible layout","text":"Visualize multiple time series in a customized layout.","category":"page"},{"location":"examples/speasy/#Get-data-with-Speasy","page":"Complex requests and flexible layout","title":"Get data with Speasy","text":"","category":"section"},{"location":"examples/speasy/","page":"Complex requests and flexible layout","title":"Complex requests and flexible layout","text":"using Speasy\nspz = speasy()\n\nusing CairoMakie\nusing DimensionalData\nusing SpaceTools\nusing Dates","category":"page"},{"location":"examples/speasy/#A-complex-requests","page":"Complex requests and flexible layout","title":"A complex requests","text":"","category":"section"},{"location":"examples/speasy/","page":"Complex requests and flexible layout","title":"Complex requests and flexible layout","text":"data = let intervals = [\"2019-01-02T15\", \"2019-01-02T16\"]\n    products = [\n        spz.inventories.tree.cda.MMS.MMS1.FGM.MMS1_FGM_SRVY_L2.mms1_fgm_b_gse_srvy_l2_clean,\n        spz.inventories.tree.cda.MMS.MMS1.SCM.MMS1_SCM_SRVY_L2_SCSRVY.mms1_scm_acb_gse_scsrvy_srvy_l2,\n        spz.inventories.tree.cda.MMS.MMS1.DES.MMS1_FPI_FAST_L2_DES_MOMS.mms1_des_bulkv_gse_fast,\n        spz.inventories.tree.cda.MMS.MMS1.DES.MMS1_FPI_FAST_L2_DES_MOMS.mms1_des_temppara_fast,\n        spz.inventories.tree.cda.MMS.MMS1.DES.MMS1_FPI_FAST_L2_DES_MOMS.mms1_des_tempperp_fast,\n        spz.inventories.tree.cda.MMS.MMS1.DES.MMS1_FPI_FAST_L2_DES_MOMS.mms1_des_energyspectr_omni_fast,\n        spz.inventories.tree.cda.MMS.MMS1.DIS.MMS1_FPI_FAST_L2_DIS_MOMS.mms1_dis_energyspectr_omni_fast\n    ]\n    get_data(products, intervals)\nend","category":"page"},{"location":"examples/speasy/#Plotting-multiple-time-series-on-a-single-figure","page":"Complex requests and flexible layout","title":"Plotting multiple time series on a single figure","text":"","category":"section"},{"location":"examples/speasy/","page":"Complex requests and flexible layout","title":"Complex requests and flexible layout","text":"let figure = (; size=(1200, 1200)), add_title = true\n    f = Figure(; figure...)\n    tplot(f[1, 1], data[1:3]; add_title)\n    tplot(f[1, 2], [data[4:5], data[6:7]...]; add_title)\n    f\nend","category":"page"},{"location":"tutorials/getting-started/#Quickstart","page":"Quickstart","title":"Quickstart","text":"","category":"section"},{"location":"tutorials/getting-started/#Get-data-with-Speasy","page":"Quickstart","title":"Get data with Speasy","text":"","category":"section"},{"location":"tutorials/getting-started/","page":"Quickstart","title":"Quickstart","text":"using Speasy\nspz = speasy()\nusing SpaceTools\n\n# da = get_data(\"amda/imf\", \"2016-6-2\", \"2016-6-5\")\nda = get_data(\"cda/OMNI_HRO_1MIN/Pressure\", \"2016-6-2\", \"2016-6-5\")","category":"page"},{"location":"tutorials/getting-started/#Plot-the-data","page":"Quickstart","title":"Plot the data","text":"","category":"section"},{"location":"tutorials/getting-started/","page":"Quickstart","title":"Quickstart","text":"tplot([da])","category":"page"},{"location":"examples/#Overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"This page contains a set of examples for you to start with.","category":"page"},{"location":"examples/","page":"Overview","title":"Overview","text":"Basic interactive tplot\nInteractive tplot with Speasy\nSpeasy example","category":"page"},{"location":"examples/#Examples-in-the-wild","page":"Overview","title":"Examples in the wild","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"Blog post\nEPSS 261 - Data Analysis Methods in Space Physics","category":"page"},{"location":"examples/interactive_speasy/#Interactive-tplot-with-Speasy","page":"Interactive tplot with Speasy","title":"Interactive tplot with Speasy","text":"","category":"section"},{"location":"examples/interactive_speasy/#Visual-exploration-of-OMNI-data","page":"Interactive tplot with Speasy","title":"Visual exploration of OMNI data","text":"","category":"section"},{"location":"examples/interactive_speasy/#tplot-with-Speasy-product-ID-strings","page":"Interactive tplot with Speasy","title":"tplot with Speasy product ID strings","text":"","category":"section"},{"location":"examples/interactive_speasy/","page":"Interactive tplot with Speasy","title":"Interactive tplot with Speasy","text":"using Speasy\nspz = speasy()\n\nusing Dates\nusing SpaceTools\nusing CairoMakie\n\nt0 = DateTime(\"2008-09-05T10:00:00\")\nt1 = DateTime(\"2008-09-05T22:00:00\")\ntvars = [\n    \"cda/OMNI_HRO_1MIN/flow_speed\",\n    \"cda/OMNI_HRO_1MIN/E\",\n    \"cda/OMNI_HRO_1MIN/Pressure\"\n]\nf, axes = tplot(tvars, t0, t1)","category":"page"},{"location":"examples/interactive_speasy/#Interactive-tplot","page":"Interactive tplot with Speasy","title":"Interactive tplot","text":"","category":"section"},{"location":"examples/interactive_speasy/","page":"Interactive tplot with Speasy","title":"Interactive tplot with Speasy","text":"Here we simulate a user interacting with the plot by progressively zooming out in time with tlims!. Note: For real-time interactivity, consider using the GLMakie backend instead of CairoMakie.","category":"page"},{"location":"examples/interactive_speasy/","page":"Interactive tplot with Speasy","title":"Interactive tplot with Speasy","text":"dt = Hour(12)\n\nrecord(f, \"interactive_speasy.mp4\", 1:5; framerate=1) do n\n    tlims!(t0 - n * dt, t1 + n * dt)\n    sleep(1)\nend","category":"page"},{"location":"examples/interactive_speasy/","page":"Interactive tplot with Speasy","title":"Interactive tplot with Speasy","text":"<video autoplay loop muted playsinline controls src=\"../interactive_speasy.mp4\" />","category":"page"},{"location":"api/#API-Reference","page":"API","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Pages = [\"api.md]","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [SpaceTools]\nOrder   = [:function, :type]","category":"page"},{"location":"api/#Base.angle-Tuple{AbstractVector, AbstractVector}","page":"API","title":"Base.angle","text":"Return the angle between two vectors.\n\n\n\n\n\n","category":"method"},{"location":"api/#DSP.Filters.filtfilt-Tuple{DimensionalData.AbstractDimArray, Any, Any}","page":"API","title":"DSP.Filters.filtfilt","text":"References\n\nhttps://docs.juliadsp.org/stable/filters/\nhttps://www.mathworks.com/help/signal/ref/filtfilt.html\nhttps://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.filtfilt.html\n\nIssues\n\nDSP.jl and Unitful.jl: https://github.com/JuliaDSP/DSP.jl/issues/431\n\n\n\n\n\n","category":"method"},{"location":"api/#InteractiveViz.iviz-Tuple{Any, SpaceTools.RangeFunction1D}","page":"API","title":"InteractiveViz.iviz","text":"Remove the resolution-based updates and only update based on axis limit to improve performance\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.B_x3_error-NTuple{8, Any}","page":"API","title":"SpaceTools.B_x3_error","text":"Calculate the composite statistical error estimate for ⟨B·x₃⟩: |Δ⟨B·x₃⟩| = √(λ₃/(M-1) + (Δφ₃₂⟨B⟩·x₂)² + (Δφ₃₁⟨B⟩·x₁)²)\n\nParameters:\n\nλ₁, λ₂, λ₃: eigenvalues in descending order\nM: number of samples\nB: mean magnetic field vector\nx₁, x₂, x₃: eigenvectors\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.ConstantThicknessApproach-Tuple{Any, Any, Any}","page":"API","title":"SpaceTools.ConstantThicknessApproach","text":"Constant Thickness Approach (CTA) for determining boundary normal and velocity. Based on the method described in Haaland et al., Annales Geophysicae, 2004.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.ConstantVelocityApproach-Tuple{Any, Any, Any}","page":"API","title":"SpaceTools.ConstantVelocityApproach","text":"ConstantVelocityApproach(positions, times, durations)\n\nGiven durations of the boundary crossings, calculate the thickness of the boundary\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.ConstantVelocityApproach-Tuple{Any, Any}","page":"API","title":"SpaceTools.ConstantVelocityApproach","text":"CVA(positions, times)\n\nConstant Velocity Approach (CVA) for determining boundary normal and velocity. Solve timing equation: D * m = Δts\n\nParameters:\n\npositions: Positions of 4 spacecraft (4×3 array)\ntimes: Times of boundary crossing for each spacecraft\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.DiscontinuityAnalyzer","page":"API","title":"SpaceTools.DiscontinuityAnalyzer","text":"Discontinuity Analyzer (DA) for analyzing properties of discontinuities using multi-spacecraft measurements.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.add_labels!-Tuple{Any}","page":"API","title":"SpaceTools.add_labels!","text":"Add labels to a grid of layouts\n\nNotes\n\nSee tag_facet in egg for reference\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.add_labels!-Tuple{}","page":"API","title":"SpaceTools.add_labels!","text":"Add labels to a figure, automatically searching for blocks to label.\n\nNotes\n\nhttps://github.com/brendanjohnharris/Foresight.jl/blob/main/src/Layouts.jl#L2\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.add_legend!-Tuple{Any, Any}","page":"API","title":"SpaceTools.add_legend!","text":"Only add legend when the axis contains multiple labels\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.amap-Tuple{Any, DimensionalData.AbstractDimArray, DimensionalData.AbstractDimArray}","page":"API","title":"SpaceTools.amap","text":"amap(f, a, b)\n\nApply a function f to the intersection of a and b.\n\nhttps://github.com/rafaqz/DimensionalData.jl/issues/914\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.axis_attributes-Union{Tuple{DimensionalData.AbstractDimArray{Q}}, Tuple{Q}} where Q","page":"API","title":"SpaceTools.axis_attributes","text":"Axis attributes for a time array\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.check_mva_mat-Tuple{Any}","page":"API","title":"SpaceTools.check_mva_mat","text":"check_mva_mat(F; r=5, verbose=false)\n\nCheck the quality of the MVA result. \n\nIf λ₁ ≥ λ₂ ≥ λ₃ are 3 eigenvalues of the constructed matrix M, then a good indicator of nice fitting LMN coordinate system should have λ₂ / λ₃ > r.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.dropna-Tuple{DimensionalData.DimArray, Any}","page":"API","title":"SpaceTools.dropna","text":"dropna(da::DimArray, query)\n\nRemove slices containing NaN values along dimensions other than query.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.ensure_nxm-Tuple{Any, Any, Any}","page":"API","title":"SpaceTools.ensure_nxm","text":"Transform matrix-like A to n×m shape\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.fac_mat-Tuple{AbstractVector}","page":"API","title":"SpaceTools.fac_mat","text":"fac_mat(vec::AbstractVector; xref=[1.0, 0.0, 0.0])\n\nGenerates a field-aligned coordinate (FAC) transformation matrix for a vector.\n\nArguments\n\nvec: A 3-element vector representing the magnetic field\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.format_datetime-Tuple{Any}","page":"API","title":"SpaceTools.format_datetime","text":"Format datetime ticks with time on top and date on bottom.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.lingradest-NTuple{16, Any}","page":"API","title":"SpaceTools.lingradest","text":"lingradest(\n    Bx1, Bx2, Bx3, Bx4,\n    By1, By2, By3, By4,\n    Bz1, Bz2, Bz3, Bz4,\n    R1, R2, R3, R4\n)\n\nSPEDAS-argument-compatible version of lingradest.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.lingradest-NTuple{8, Any}","page":"API","title":"SpaceTools.lingradest","text":"lingradest(B1, B2, B3, B4, R1, R2, R3, R4)\n\nCompute spatial derivatives such as grad, div, curl and curvature using reciprocal vector technique (linear interpolation).\n\nArguments\n\nB1, B2, B3, B4: 3-element vectors giving magnetic field measurements at each probe\nR1, R2, R3, R4: 3-element vectors giving the probe positions\n\nReturns\n\nA named tuple containing:   • Rbary: Barycenter position   • Bbc: Magnetic field at the barycenter   • Bmag: Magnetic field magnitude at the barycenter   • LGBx, LGBy, LGBz: Linear gradient estimators for each component   • LD: Linear divergence estimator   • LCB: Linear curl estimator   • curvature: Field‐line curvature vector   • R_c: Field‐line curvature radius\n\nReferences\n\nBased on the method of Chanteur (ISSI, 1998, Ch. 11).\n\nlingradest.pro\nlingradest.py\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.lingradest-Tuple{DimensionalData.AbstractDimArray, Vararg{Any}}","page":"API","title":"SpaceTools.lingradest","text":"lingradest(B1::AbstractDimArray, args...)\n\nMethod for handling dimensional arrays. Takes AbstractDimArray inputs with a time dimension and returns a DimStack containing all computed quantities.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.lingradest-Tuple{Union{AbstractArray{<:AbstractVector}, AbstractMatrix}, Vararg{Any}}","page":"API","title":"SpaceTools.lingradest","text":"lingradest(B1::MatrixLike, args...)\n\nVectorized method for simplified usage. Returns a StructArray containing the results.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.m2nV-Tuple{Any}","page":"API","title":"SpaceTools.m2nV","text":"Convert slowness vector 𝐦 = 𝐧V to normal vector and velocity\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.mva-Tuple{AbstractMatrix, AbstractMatrix}","page":"API","title":"SpaceTools.mva","text":"mva(V::AbstractMatrix, B::AbstractMatrix; kwargs...)\n\nRotate a timeseries V into the LMN coordinates based on the reference field B.\n\nArguments\n\nV::AbstractMatrix: The timeseries data to be transformed, where each column represents a component\nB::AbstractMatrix: The reference field used to determine the minimum variance directions, where each column represents a component\n\nSee also: mva_mat(Bx, By, Bz), rotate\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.mva_mat-Tuple{Any, Any, Any}","page":"API","title":"SpaceTools.mva_mat","text":"mva_mat(Bx, By, Bz; verbose=false)\n\nGenerates a LMN coordinate transformation matrix from 3 orthogonal vectors Bx, By, Bz.\n\nPerform minimum variance analysis to vector components defined in orthogonal coordinates Bx, By and Bz. Set check=true to check the reliability of the result.\n\nThe kth eigenvector can be obtained from the slice F.vectors[:, k].\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.nt2ds-Tuple{Any, Any}","page":"API","title":"SpaceTools.nt2ds","text":"nt2ds(nt_arr, dim; fields=propertynames(first(nt_arr)))\n\nConvert a NamedTuple array to a DimStack of DimArrays.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.plot_attributes-Tuple{DimensionalData.AbstractDimArray}","page":"API","title":"SpaceTools.plot_attributes","text":"Plot attributes for a time array (axis + labels)\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.position_tensor-Tuple{AbstractVector{<:AbstractVector}}","page":"API","title":"SpaceTools.position_tensor","text":"𝐑 = _α (𝐫_α-𝐫_b) (𝐫_α-𝐫_b) = _α 𝐫_α 𝐫_α-𝐫_b 𝐫_b\n\nwith 𝐫_b = _α 𝐫_α  N and N is the number of positions.\n\nReferences\n\nPaschmann and Daly [1] Paschmann & Daly, 2008. Section 4.7\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.pspectrum-Tuple{DimensionalData.AbstractDimArray, SignalAnalysis.Spectrogram}","page":"API","title":"SpaceTools.pspectrum","text":"pspectrum(x::AbstractDimArray, spec::Spectrogram)\npspectrum(x::AbstractDimArray; nfft=256, noverlap=128, window=hamming)\n\nCompute the power spectrum (time-frequency representation) of a time series using the short-time Fourier transform.\n\nReturns a DimArray with frequency and original time dimensions.\n\nSee also: DSP.Spectrogram, DSP.stft\n\nReference\n\nMatlab\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.reciprocal_vector-NTuple{4, Any}","page":"API","title":"SpaceTools.reciprocal_vector","text":"reciprocal_vector(rα, rβ, rγ, rλ)\n\nCompute the reciprocal vector 𝒌_α for a vertex of a tetrahedron given the position vectors of all vertices.\n\nThe vertices (α, β, γ, λ) must form a cyclic permutation of (1, 2, 3, 4).\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.reciprocal_vector-Tuple{Any, AbstractVector{<:AbstractVector}}","page":"API","title":"SpaceTools.reciprocal_vector","text":"reciprocal_vector(rα, r0s::AbstractVector{<:AbstractVector})\n\nGeneralised reciprocal vector for N != 4\n\n𝐪_α = 𝐑^-1 𝐫_α\n\nSee also: reciprocal_vector, position_tensor\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.reciprocal_vector-Tuple{Any, Any, Any}","page":"API","title":"SpaceTools.reciprocal_vector","text":"reciprocal_vector(r_βα, r_βγ, r_βλ)\n\nCompute the reciprocal vector 𝒌_α for a vertex of a tetrahedron given the relative position vectors.\n\n𝒌_α = frac𝐫_βγ  𝐫_βλ𝐫_βα  (𝐫_βγ  𝐫_βλ)\n\nwhere 𝐫_αβ = r_β - r_α are relative position vectors.\n\nReferences\n\nMulti-spacecraft analysis methods revisited : 4.3 Properties of reciprocal vectors\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.reciprocal_vectors-NTuple{4, Any}","page":"API","title":"SpaceTools.reciprocal_vectors","text":"Compute the set of reciprocal vectors {𝒌_α}, which is also called the reciprocal base of the tetrahedron.\n\nSee also: reciprocal_vector\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.rectify_datetime-Tuple{Any}","page":"API","title":"SpaceTools.rectify_datetime","text":"Rectify the time step of a DimArray to be uniform.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.rotate-Tuple{AbstractMatrix, AbstractMatrix}","page":"API","title":"SpaceTools.rotate","text":"rotate(ts::AbstractMatrix, mat::AbstractMatrix)\n\nCoordinate-aware transformation of vector/matrix by rotation matrix(s) mat(s). Assume ts is a matrix of shape (n, 3).\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.set_if_equal!-Tuple{Any, Any, Any}","page":"API","title":"SpaceTools.set_if_equal!","text":"Set an attribute if all values are equal\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.smooth-Tuple{DimensionalData.AbstractDimArray, Unitful.Quantity}","page":"API","title":"SpaceTools.smooth","text":"smooth(da::AbstractDimArray, window; dim=Ti, suffix=\"_smoothed\", kwargs...)\n\nSmooths a time series by computing a moving average over a sliding window.\n\nThe size of the sliding window can be either:\n\nQuantity: A time duration that will be converted to number of samples based on data resolution\nInteger: Number of samples directly\n\nArguments\n\ndims=Ti: Dimension along which to perform smoothing (default: time dimension)\nsuffix=\"_smoothed\": Suffix to append to the variable name in output\nkwargs...: Additional arguments passed to RollingWindowArrays.rolling\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tetrahedron_quality-Tuple{AbstractVector{<:AbstractVector}}","page":"API","title":"SpaceTools.tetrahedron_quality","text":"Calculate tetrahedron quality factors\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.time2value_transform-Tuple{Any, Any}","page":"API","title":"SpaceTools.time2value_transform","text":"Transform a function that handles time range to a function that handles x range (time values) and return x and y values.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tinterp-Tuple{Any, Any}","page":"API","title":"SpaceTools.tinterp","text":"tinterp(A, t; interp=LinearInterpolation)\n\nInterpolate time series A at time point(s) t. Returns interpolated value for single time point or DimArray for multiple time points.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tinterp-Tuple{Any, DimensionalData.AbstractDimArray}","page":"API","title":"SpaceTools.tinterp","text":"tinterp(A, B; interp=LinearInterpolation)\n\nInterpolate A to times in B\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tlines!-Tuple{Any, Any}","page":"API","title":"SpaceTools.tlines!","text":"Add vertical lines to a plot\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tmean-Tuple{AbstractVector{Dates.DateTime}}","page":"API","title":"SpaceTools.tmean","text":"https://github.com/JuliaLang/julia/issues/54542\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tplot-Tuple{Union{GridLayoutBase.GridPosition, GridLayoutBase.GridSubposition, Makie.Figure}, Any, Vararg{Any}}","page":"API","title":"SpaceTools.tplot","text":"tplot(f, tas; legend=(; position=Right()), link_xaxes=true, rowgap=5, kwargs...)\n\nLay out multiple time series across different panels (rows) on one Figure / GridPosition f\n\nIf legend is nothing, no legend will be added to the plot. Otherwise, legend can be a NamedTuple containing options for legend placement and styling.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tplot_panel!-Tuple{Makie.Axis, Any, Vararg{Any}}","page":"API","title":"SpaceTools.tplot_panel!","text":"tplot_panel!(ax::Axis, ta, args...; kwargs...)\n\nExtension interface for plotting custom data types. See tplot_panel for more details.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tplot_panel!-Tuple{Makie.Axis, Union{TimeseriesTools.AbstractToolsArray{T, 2} where T, DimensionalData.AbstractDimMatrix}}","page":"API","title":"SpaceTools.tplot_panel!","text":"Plot heatmap / overlay multiple columns of a time series on the same axis\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tplot_panel-Tuple{Any, Any, Vararg{Any}}","page":"API","title":"SpaceTools.tplot_panel","text":"tplot_panel(gp, ta, args...; kwargs...)\n\nExtension interface for plotting custom data types. To support a new data type:\n\nDefine a method for get_data(ta, args...; kwargs...) that converts your type to a DimensionalData array\nOptionally include metadata for labels, units, and other plotting attributes\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tplot_panel-Tuple{Any, Function, Dates.DateTime, Dates.DateTime}","page":"API","title":"SpaceTools.tplot_panel","text":"Interactive tplot of a function over a time range\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tplot_panel-Tuple{Any, SpaceTools.DataSet, Dates.DateTime, Dates.DateTime, Vararg{Any}}","page":"API","title":"SpaceTools.tplot_panel","text":"Setup the panel on a position and plot multiple time series on it\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tplot_panel-Tuple{Any, Union{TimeseriesTools.AbstractToolsArray{T, 1} where T, DimensionalData.AbstractDimVector}}","page":"API","title":"SpaceTools.tplot_panel","text":"tplot_panel(gp, ta::AbstractDimVector)\n\nPlot a univariate time series on a panel. Only add legend when the axis contains multiple labels.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tplot_panel-Tuple{Any, Union{TimeseriesTools.AbstractToolsArray{T, 2} where T, DimensionalData.AbstractDimMatrix}}","page":"API","title":"SpaceTools.tplot_panel","text":"tplot_panel(gp, ta::AbstractDimMatrix)\n\nPlot a multivariate time series / spectrogram on a panel\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tplot_panel-Tuple{Any, Union{Tuple, NamedTuple, AbstractVector}, Vararg{Any}}","page":"API","title":"SpaceTools.tplot_panel","text":"Setup the panel on a position and plot multiple time series on it\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tsheat-Tuple{DimensionalData.AbstractDimArray}","page":"API","title":"SpaceTools.tsheat","text":"tsheat(data; kwargs...)\n\nHeatmap with better default attributes for time series.\n\nReferences:\n\nhttps://docs.makie.org/stable/reference/plots/heatmap\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tsplit","page":"API","title":"SpaceTools.tsplit","text":"tsplit(da::AbstractDimArray, dim=Ti)\n\nSplits up data along dimension dim.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.tstack-Tuple{AbstractVector{<:AbstractVector}}","page":"API","title":"SpaceTools.tstack","text":"tstack(vectors::AbstractVector{<:AbstractVector{T}})\n\nStack a time series of vectors into a matrix. \n\nBy default, each row in the output matrix represents a time point from the input vector of vectors.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.x2t-Tuple{Dates.Millisecond}","page":"API","title":"SpaceTools.x2t","text":"Convert x to DateTime\n\nReference:\n\nhttps://docs.makie.org/dev/explanations/dim-converts#Makie.DateTimeConversion\nhttps://github.com/MakieOrg/Makie.jl/issues/442\nhttps://github.com/MakieOrg/Makie.jl/blob/master/src/dim-converts/dates-integration.jl\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.ys-Tuple{DimensionalData.DimMatrix{T} where T}","page":"API","title":"SpaceTools.ys","text":"permutedims is needed for series in Makie\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.Δφij-NTuple{4, Any}","page":"API","title":"SpaceTools.Δφij","text":"Δφij(λᵢ, λⱼ, λ₃, M)\n\nCalculate the phase error between components i and j according to: |Δφᵢⱼ| = |Δφⱼᵢ| = √(λ₃/(M-1) * (λᵢ + λⱼ - λ₃)/(λᵢ - λⱼ)²)\n\nParameters:\n\nλᵢ: eigenvalue i\nλⱼ: eigenvalue j\nλ₃: smallest eigenvalue (λ₃)\nM: number of samples\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.ω2f-Tuple{Any}","page":"API","title":"SpaceTools.ω2f","text":"Convert angular frequency to frequency\n\nReference: https://www.wikiwand.com/en/articles/Angular_frequency\n\n\n\n\n\n","category":"method"},{"location":"explanations/tplot/#Tplot","page":"Tplot","title":"Tplot","text":"","category":"section"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"tplot is a versatile plotting utility that handles various time series formats including vectors, matrices, functions, and strings (product IDs). It renders data as line plots, series plots, heatmaps, or spectrograms.","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"tplot offers flexible visualization options, allowing you to display multiple time series either across separate panels or overlaid within the same panel.","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"tplot seamlessly integrates with Speasy.jl, automatically downloading and converting data to DimArray when given a product ID string.","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"Built on Makie, tplot provides both interactive exploration capabilities and publication-quality output. It features dynamic data loading during zoom/pan operations, efficiently retrieving and rendering data on demand.","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"tplot\ntplot_panel\ntplot_panel!","category":"page"},{"location":"explanations/tplot/#SpaceTools.tplot","page":"Tplot","title":"SpaceTools.tplot","text":"tplot(f, tas; legend=(; position=Right()), link_xaxes=true, rowgap=5, kwargs...)\n\nLay out multiple time series across different panels (rows) on one Figure / GridPosition f\n\nIf legend is nothing, no legend will be added to the plot. Otherwise, legend can be a NamedTuple containing options for legend placement and styling.\n\n\n\n\n\n","category":"function"},{"location":"explanations/tplot/#SpaceTools.tplot_panel","page":"Tplot","title":"SpaceTools.tplot_panel","text":"Setup the panel on a position and plot multiple time series on it\n\n\n\n\n\nSetup the panel on a position and plot multiple time series on it\n\n\n\n\n\ntplot_panel(gp, ta::AbstractDimMatrix)\n\nPlot a multivariate time series / spectrogram on a panel\n\n\n\n\n\ntplot_panel(gp, ta::AbstractDimVector)\n\nPlot a univariate time series on a panel. Only add legend when the axis contains multiple labels.\n\n\n\n\n\nInteractive tplot of a function over a time range\n\n\n\n\n\ntplot_panel(gp, ta, args...; kwargs...)\n\nExtension interface for plotting custom data types. To support a new data type:\n\nDefine a method for get_data(ta, args...; kwargs...) that converts your type to a DimensionalData array\nOptionally include metadata for labels, units, and other plotting attributes\n\n\n\n\n\n","category":"function"},{"location":"explanations/tplot/#SpaceTools.tplot_panel!","page":"Tplot","title":"SpaceTools.tplot_panel!","text":"Plot heatmap / overlay multiple columns of a time series on the same axis\n\n\n\n\n\ntplot_panel!(ax::Axis, ta, args...; kwargs...)\n\nExtension interface for plotting custom data types. See tplot_panel for more details.\n\n\n\n\n\n","category":"function"},{"location":"explanations/tplot/#Function-as-tplot-argument-for-interactive-exploration","page":"Tplot","title":"Function as tplot argument for interactive exploration","text":"","category":"section"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"tplot can handle functions that accept time intervals as arguments. This allows for creating interactive plots where data is dynamically fetched. So instead of the two-step process:","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"Fetch data: da = f(t0, t1)\nPlot data: tplot(da)","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"We can combine these steps into a single command:","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"tplot(f, t0, t1)","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"This approach enables efficient interactive exploration of time series.","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"note: Note\nFor real-time interactivity, consider using the GLMakie backend instead of CairoMakie although it is possible to use tlims! or xlims! to update the plot dynamically.","category":"page"},{"location":"explanations/tplot/#Related-packages","page":"Tplot","title":"Related packages","text":"","category":"section"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"PyTplot\nInteractiveViz.jl\nSciQLop : A python application built on top of Qt to explore multivariate time series effortlessly,","category":"page"},{"location":"explanations/resampling/#Time-Series-Resampling-Methods","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"","category":"section"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"The adjustment of a segment of time-series data set to produce a segment of data which is scientifically equivalent but with data sample timing strictly simultaneous with that of another data set is called “resampling”. Paschmann and Daly [2], Chapter 2","category":"page"},{"location":"explanations/resampling/#Time-Series-Interpolation","page":"Time Series Resampling Methods","title":"Time Series Interpolation","text":"","category":"section"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"Flexible time series interpolation through the tinterp function.","category":"page"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"This function supports interpolation for both vector-like and matrix-like time series. Other features include:","category":"page"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"Returns scalar value for single time point interpolation\nReturns DimArray for multiple time points interpolation, preserving metadata and dimensions. \nCustomizable interpolation method through the interp keyword argument","category":"page"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"tinterp","category":"page"},{"location":"explanations/resampling/#SpaceTools.tinterp","page":"Time Series Resampling Methods","title":"SpaceTools.tinterp","text":"tinterp(A, t; interp=LinearInterpolation)\n\nInterpolate time series A at time point(s) t. Returns interpolated value for single time point or DimArray for multiple time points.\n\n\n\n\n\ntinterp(A, B; interp=LinearInterpolation)\n\nInterpolate A to times in B\n\n\n\n\n\n","category":"function"},{"location":"explanations/resampling/#Basic-Usage","page":"Time Series Resampling Methods","title":"Basic Usage","text":"","category":"section"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"using SpaceTools\nusing Dates\nusing DataInterpolations\n\n# Interpolate at a single time point\nval = tinterp(time_series, DateTime(\"2023-01-01T12:00:00\"))\n\n# Interpolate at multiple time points\nnew_times = DateTime(\"2023-01-01\"):Hour(1):DateTime(\"2023-01-02\")\ninterpolated = tinterp(time_series, new_times; interp=CubicSpline)","category":"page"},{"location":"explanations/resampling/#Utilities","page":"Time Series Resampling Methods","title":"Utilities","text":"","category":"section"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"dropna\nrectify_datetime","category":"page"},{"location":"explanations/resampling/#SpaceTools.dropna","page":"Time Series Resampling Methods","title":"SpaceTools.dropna","text":"dropna(da::DimArray, query)\n\nRemove slices containing NaN values along dimensions other than query.\n\n\n\n\n\n","category":"function"},{"location":"explanations/resampling/#SpaceTools.rectify_datetime","page":"Time Series Resampling Methods","title":"SpaceTools.rectify_datetime","text":"Rectify the time step of a DimArray to be uniform.\n\n\n\n\n\n","category":"function"},{"location":"#SpaceTools.jl","page":"Home","title":"SpaceTools.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Build Status)","category":"page"},{"location":"","page":"Home","title":"Home","text":"A collection of tools for space physics / heliophysics: from data loading and processing to plotting and analysis.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(PackageSpec(url=\"https://github.com/Beforerr/SpaceTools.jl\"))","category":"page"},{"location":"#Related-packages","page":"Home","title":"Related packages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SPEDAS (IDL) / PySPEDAS : Space Physics Environment Data Analysis Software framework to support loading, plotting, analysis, and integration of data from a number of space- and ground-based observatories\nKamodo : An official NASA open-source python package built upon the functionalization of datasets\nspace-analysis.py : Python utils for data analysis in space physics.\nSpaceAnalysis.jl : Space physics analysis tool using Julia\nminimum variance analysis (MVA)\nspectral analysis\nmoving box average for filtering magnetometer data\ncoordinate transformations\nQSAS (C/C++) : Science Analysis Software for Space Plasmas","category":"page"},{"location":"","page":"Home","title":"Home","text":"⚠️ Development Status: This package is in active development. While functional, the API may undergo changes in future releases. Please review the documentation and test thoroughly before using in scientific work.","category":"page"},{"location":"","page":"Home","title":"Home","text":"📫 Contributing: We welcome contributions! If you're interested in collaborating or need assistance, please open an issue or reach out through our GitHub repository.","category":"page"},{"location":"#Explanations","page":"Home","title":"Explanations","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"explanations/coords.md\",\n    \"explanations/multispacecraft.md\",\n    \"explanations/tplot.md\",\n    \"explanations/resampling.md\"\n]\nDepth = 1","category":"page"},{"location":"explanations/coords/#Coordinate-Systems","page":"Coordinate Systems","title":"Coordinate Systems","text":"","category":"section"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"This package defines common coordinate systems used in heliophysics and space physics research.","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"Pages = [\"coords.md\"]\nDepth = 2:3","category":"page"},{"location":"explanations/coords/#Coordinate-Transformations","page":"Coordinate Systems","title":"Coordinate Transformations","text":"","category":"section"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"rotate","category":"page"},{"location":"explanations/coords/#SpaceTools.rotate-explanations-coords","page":"Coordinate Systems","title":"SpaceTools.rotate","text":"rotate(ts::AbstractMatrix, mat::AbstractMatrix)\n\nCoordinate-aware transformation of vector/matrix by rotation matrix(s) mat(s). Assume ts is a matrix of shape (n, 3).\n\n\n\n\n\n","category":"function"},{"location":"explanations/coords/#Standard-Coordinate-Systems","page":"Coordinate Systems","title":"Standard Coordinate Systems","text":"","category":"section"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"GSE (Geocentric Solar Ecliptic)\nGSM (Geocentric Solar Magnetic)\nGEI (Geocentric Equatorial Inertial)\nSM (Solar Magnetic)\nGEO (Geographic)\nJ2000","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"More information can be found in the the following links","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"https://stereo-ssc.nascom.nasa.gov/coordinates_explanation.shtml","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"note: Implementation Status\nTransformations between these coordinate systems are planned but not yet implemented.","category":"page"},{"location":"explanations/coords/#Specialized-Coordinate-Systems","page":"Coordinate Systems","title":"Specialized Coordinate Systems","text":"","category":"section"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"The package also provides transformations for analysis-specific coordinate systems:","category":"page"},{"location":"explanations/coords/#Field-Aligned-Coordinates-(FAC)","page":"Coordinate Systems","title":"Field-Aligned Coordinates (FAC)","text":"","category":"section"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"A local coordinate system defined relative to the ambient magnetic field direction, useful for studying plasma waves and particle distributions.","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"fac_mat","category":"page"},{"location":"explanations/coords/#SpaceTools.fac_mat-explanations-coords","page":"Coordinate Systems","title":"SpaceTools.fac_mat","text":"fac_mat(vec::AbstractVector; xref=[1.0, 0.0, 0.0])\n\nGenerates a field-aligned coordinate (FAC) transformation matrix for a vector.\n\nArguments\n\nvec: A 3-element vector representing the magnetic field\n\n\n\n\n\n","category":"function"},{"location":"explanations/coords/#Minimum-Variance-Analysis-(MVA)-and-Boundary-Normal-Coordinates-(LMN)","page":"Coordinate Systems","title":"Minimum Variance Analysis (MVA) and Boundary Normal Coordinates (LMN)","text":"","category":"section"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"A coordinate system derived from the eigenvalues and eigenvectors of the magnetic field variance matrix, commonly used in analyzing current sheets, discontinuities, and wave propagation.","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"References:","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"Minimum and Maximum Variance Analysis\nhttps://pyspedas.readthedocs.io/en/latest/coords.html#pyspedas.minvar","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"mva_mat\nmva\ncheck_mva_mat","category":"page"},{"location":"explanations/coords/#SpaceTools.mva_mat-explanations-coords","page":"Coordinate Systems","title":"SpaceTools.mva_mat","text":"mva_mat(Bx, By, Bz; verbose=false)\n\nGenerates a LMN coordinate transformation matrix from 3 orthogonal vectors Bx, By, Bz.\n\nPerform minimum variance analysis to vector components defined in orthogonal coordinates Bx, By and Bz. Set check=true to check the reliability of the result.\n\nThe kth eigenvector can be obtained from the slice F.vectors[:, k].\n\n\n\n\n\n","category":"function"},{"location":"explanations/coords/#SpaceTools.mva-explanations-coords","page":"Coordinate Systems","title":"SpaceTools.mva","text":"mva(V::AbstractMatrix, B::AbstractMatrix; kwargs...)\n\nRotate a timeseries V into the LMN coordinates based on the reference field B.\n\nArguments\n\nV::AbstractMatrix: The timeseries data to be transformed, where each column represents a component\nB::AbstractMatrix: The reference field used to determine the minimum variance directions, where each column represents a component\n\nSee also: mva_mat(Bx, By, Bz), rotate\n\n\n\n\n\n","category":"function"},{"location":"explanations/coords/#SpaceTools.check_mva_mat-explanations-coords","page":"Coordinate Systems","title":"SpaceTools.check_mva_mat","text":"check_mva_mat(F; r=5, verbose=false)\n\nCheck the quality of the MVA result. \n\nIf λ₁ ≥ λ₂ ≥ λ₃ are 3 eigenvalues of the constructed matrix M, then a good indicator of nice fitting LMN coordinate system should have λ₂ / λ₃ > r.\n\n\n\n\n\n","category":"function"}]
}
