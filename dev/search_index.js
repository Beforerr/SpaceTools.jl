var documenterSearchIndex = {"docs":
[{"location":"examples/interactive/#Basic-interactive-tplot","page":"Basic interactive tplot","title":"Basic interactive tplot","text":"","category":"section"},{"location":"examples/interactive/#Function-as-tplot-argument","page":"Basic interactive tplot","title":"Function as tplot argument","text":"","category":"section"},{"location":"examples/interactive/","page":"Basic interactive tplot","title":"Basic interactive tplot","text":"using Dates\nusing DimensionalData\nusing SpaceTools\nusing CairoMakie\n\nt0 = DateTime(2001, 1, 1)\nt1 = DateTime(2001, 1, 2)\n\nfunction func(t0, t1)\n    x = t0:Hour(1):t1\n    y = @. sin(2pi * ((x - t0) / Day(1)))\n    DimArray(y, Ti(x))\nend\n\nf, axes = tplot(func, t0, t1)","category":"page"},{"location":"examples/interactive/#Interactive-tplot","page":"Basic interactive tplot","title":"Interactive tplot","text":"","category":"section"},{"location":"examples/interactive/","page":"Basic interactive tplot","title":"Basic interactive tplot","text":"Here we simulate a user interacting with the plot by progressively zooming out in time with tlims!.","category":"page"},{"location":"examples/interactive/","page":"Basic interactive tplot","title":"Basic interactive tplot","text":"dt = Day(1)\nrecord(f, \"interactive.mp4\", 1:5; framerate=2) do n\n    tlims!(t0, t1 + n * dt)\n    sleep(0.5)\nend;","category":"page"},{"location":"examples/interactive/","page":"Basic interactive tplot","title":"Basic interactive tplot","text":"<video autoplay loop muted playsinline controls src=\"../interactive.mp4\" />","category":"page"},{"location":"explanations/multispacecraft/#Multi-spacecraft-analysis-methods","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"","category":"section"},{"location":"explanations/multispacecraft/#Reciprocal-vectors","page":"Multi-spacecraft analysis methods","title":"Reciprocal vectors","text":"","category":"section"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"Paschmann and Daly [1], Chapter 4, Paschmann and Daly [2], Chapter 14, ","category":"page"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"SpaceTools.position_tensor\nreciprocal_vector\nreciprocal_vectors","category":"page"},{"location":"explanations/multispacecraft/#SpaceTools.position_tensor","page":"Multi-spacecraft analysis methods","title":"SpaceTools.position_tensor","text":"𝐑 = _α (𝐫_α-𝐫_b) (𝐫_α-𝐫_b) = _α 𝐫_α 𝐫_α-𝐫_b 𝐫_b\n\nwith 𝐫_b = _α 𝐫_α  N and N is the number of positions.\n\nReferences\n\nPaschmann and Daly [1] Paschmann & Daly, 2008. Section 4.7\n\n\n\n\n\n","category":"function"},{"location":"explanations/multispacecraft/#SpaceTools.reciprocal_vector","page":"Multi-spacecraft analysis methods","title":"SpaceTools.reciprocal_vector","text":"reciprocal_vector(r_βα, r_βγ, r_βλ)\n\nCompute the reciprocal vector 𝒌_α for a vertex of a tetrahedron given the relative position vectors.\n\n𝒌_α = frac𝐫_βγ  𝐫_βλ𝐫_βα  (𝐫_βγ  𝐫_βλ)\n\nwhere 𝐫_αβ = r_β - r_α are relative position vectors.\n\nReferences\n\nMulti-spacecraft analysis methods revisited : 4.3 Properties of reciprocal vectors\n\n\n\n\n\nreciprocal_vector(rα, rβ, rγ, rλ)\n\nCompute the reciprocal vector 𝒌_α for a vertex of a tetrahedron given the position vectors of all vertices.\n\nThe vertices (α, β, γ, λ) must form a cyclic permutation of (1, 2, 3, 4).\n\n\n\n\n\nreciprocal_vector(rα, r0s::AbstractVector{<:AbstractVector})\n\nGeneralised reciprocal vector for N != 4\n\n𝐪_α = 𝐑^-1 𝐫_α\n\nSee also: reciprocal_vector, position_tensor\n\n\n\n\n\n","category":"function"},{"location":"explanations/multispacecraft/#SpaceTools.reciprocal_vectors","page":"Multi-spacecraft analysis methods","title":"SpaceTools.reciprocal_vectors","text":"Compute the set of reciprocal vectors {𝒌_α}, which is also called the reciprocal base of the tetrahedron.\n\nSee also: reciprocal_vector\n\n\n\n\n\n","category":"function"},{"location":"explanations/multispacecraft/#Estimation-of-spatial-gradients","page":"Multi-spacecraft analysis methods","title":"Estimation of spatial gradients","text":"","category":"section"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"lingradest","category":"page"},{"location":"explanations/multispacecraft/#SpaceTools.lingradest","page":"Multi-spacecraft analysis methods","title":"SpaceTools.lingradest","text":"lingradest(B1, B2, B3, B4, R1, R2, R3, R4)\n\nCompute spatial derivatives such as grad, div, curl and curvature using reciprocal vector technique (linear interpolation).\n\nArguments\n\nB1, B2, B3, B4: 3-element vectors giving magnetic field measurements at each probe\nR1, R2, R3, R4: 3-element vectors giving the probe positions\n\nReturns\n\nA named tuple containing:   • Rbary: Barycenter position   • Bbc: Magnetic field at the barycenter   • Bmag: Magnetic field magnitude at the barycenter   • LGBx, LGBy, LGBz: Linear gradient estimators for each component   • LD: Linear divergence estimator   • LCB: Linear curl estimator   • curvature: Field‐line curvature vector   • R_c: Field‐line curvature radius\n\nReferences\n\nBased on the method of Chanteur (ISSI, 1998, Ch. 11).\n\nlingradest.pro\nlingradest.py\n\n\n\n\n\nlingradest(B1::MatrixLike, args...)\n\nVectorized method for simplified usage. Returns a StructArray containing the results.\n\n\n\n\n\nlingradest(B1::AbstractDimArray, args...)\n\nMethod for handling dimensional arrays. Takes AbstractDimArray inputs with a time dimension and returns a DimStack containing all computed quantities.\n\n\n\n\n\nlingradest(\n    Bx1, Bx2, Bx3, Bx4,\n    By1, By2, By3, By4,\n    Bz1, Bz2, Bz3, Bz4,\n    R1, R2, R3, R4\n)\n\nSPEDAS-argument-compatible version of lingradest.\n\n\n\n\n\n","category":"function"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"Since tildeg and tildeboldsymbolV are linear functions, the calculation of spatial derivatives, such as the gradient of some scalar function or the divergence or curl of a vector function, can be done quite easily. The results are:","category":"page"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"beginaligned\nnabla g simeq nabla tildeg  =sum_alpha=0^3 boldsymbolk_alpha g_alpha \nhatboldsymbole cdot nabla g simeq hatboldsymbole cdot nabla tildeg  =sum_alpha=0^3left(hatboldsymbole cdot boldsymbolk_alpharight) g_alpha \nnabla cdot boldsymbolV simeq nabla cdot tildeboldsymbolV  =sum_alpha=0^3 boldsymbolk_alpha cdot boldsymbolV_alpha \nnabla times boldsymbolV simeq nabla times tildeboldsymbolV  =sum_alpha=0^3 boldsymbolk_alpha times boldsymbolV_alpha\nendaligned","category":"page"},{"location":"explanations/multispacecraft/#Multi-spacecraft-timing","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft timing","text":"","category":"section"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"ConstantVelocityApproach","category":"page"},{"location":"explanations/multispacecraft/#SpaceTools.ConstantVelocityApproach","page":"Multi-spacecraft analysis methods","title":"SpaceTools.ConstantVelocityApproach","text":"CVA(positions, times)\n\nConstant Velocity Approach (CVA) for determining boundary normal and velocity. Solve timing equation: D * m = Δts\n\nParameters:\n\npositions: Positions of 4 spacecraft (4×3 array)\ntimes: Times of boundary crossing for each spacecraft\n\n\n\n\n\nConstantVelocityApproach(positions, times, durations)\n\nGiven durations of the boundary crossings, calculate the thickness of the boundary\n\n\n\n\n\n","category":"function"},{"location":"explanations/multispacecraft/","page":"Multi-spacecraft analysis methods","title":"Multi-spacecraft analysis methods","text":"G. Paschmann and P. W. Daly. Multi-Spacecraft Analysis Methods Revisited (ESA Communications, 2008).\n\n\n\nG. Paschmann and P. W. Daly. Analysis Methods for Multi-Spacecraft Data (ESA Publications Division, 2000).\n\n\n\nJ. C. Samson and J. V. Olson. Some Comments on the Descriptions of the Polarization States of Waves. Geophysical Journal International 61, 115–129 (1980).\n\n\n\nJ. D. Means. Use of the Three-Dimensional Covariance Matrix in Analyzing the Polarization Properties of Plane Waves. Journal of Geophysical Research (1896-1977) 77, 5551–5559 (1972).\n\n\n\n","category":"page"},{"location":"explanations/waves/#Wave","page":"Wave","title":"Wave","text":"","category":"section"},{"location":"explanations/waves/#Polarization-states-of-waves","page":"Wave","title":"Polarization states of waves","text":"","category":"section"},{"location":"explanations/waves/","page":"Wave","title":"Wave","text":"This module provides functions for calculating the polarization states of waves: polarization, ellipticity, helicity.","category":"page"},{"location":"explanations/waves/","page":"Wave","title":"Wave","text":"polarization\nwpol_helicity","category":"page"},{"location":"explanations/waves/#SpaceTools.polarization","page":"Wave","title":"SpaceTools.polarization","text":"polarization(S0, S1, S2, S3)\npolarization(S::StokesVector)\n\nCompute the degree of polarization (p) from Stoke parameters or a Stokes vector.\n\nReference\n\nWikipedia\nStokes parameters\n\n\n\n\n\npolarization(S)\n\nCompute the degree of polarization (DOP) p^2 from spectral matrix S.\n\nbeginaligned\np^2  = 1-frac(tr 𝐒)^2-(tr 𝐒^2)(tr 𝐒)^2-n^-1(tr 𝐒)^2 \n    = fracn(tr 𝐒^2)-(tr 𝐒)^2(n-1)(tr 𝐒)^2\nendaligned\n\n\n\n\n\n","category":"function"},{"location":"explanations/waves/#SpaceTools.wpol_helicity","page":"Wave","title":"SpaceTools.wpol_helicity","text":"wpol_helicity(S, waveangle)\n\nCompute helicity and ellipticity for a single frequency.\n\nArguments\n\nS: Spectral matrix for a single frequency, size (3,3)\nwaveangle: Wave normal angle for this frequency\n\nReturns\n\nhelicity: Average helicity across the three components\nellipticity: Average ellipticity across the three components\n\n\n\n\n\n","category":"function"},{"location":"explanations/waves/","page":"Wave","title":"Wave","text":"Samson and Olson [3] Means [4]","category":"page"},{"location":"explanations/waves/","page":"Wave","title":"Wave","text":"spectral_matrix","category":"page"},{"location":"explanations/waves/#SpaceTools.spectral_matrix","page":"Wave","title":"SpaceTools.spectral_matrix","text":"spectral_matrix(X, window)\n\nCompute the spectral matrix S(f) defined by\n\nS_ij(f) = X_i(f) X_j^*(f)\n\nwhere X_i(f) is the FFT of the i-th component and * denotes complex conjugation.\n\nReturns a 3-D array of size N_freq n n, where N_freq = lfloor N2 rfloor      and n is the dimensionality (number of components).\n\nArguments\n\nX: Matrix where each column is a component of the multivariate time series, or a vector of vectors.\nwindow: A window function (optional). If not provided, a rectangular window (no windowing) is used.\n\n\n\n\n\n","category":"function"},{"location":"explanations/waves/","page":"Wave","title":"Wave","text":"twavpol\nwavpol","category":"page"},{"location":"explanations/waves/#SpaceTools.twavpol","page":"Wave","title":"SpaceTools.twavpol","text":"twavpol(x)\n\nA convenience wrapper around wavpol that works with DimensionalData arrays.\n\nIt automatically extracts the time dimension and returns the results as a DimStack with properly labeled dimensions.\n\n\n\n\n\n","category":"function"},{"location":"explanations/waves/#SpaceTools.wavpol","page":"Wave","title":"SpaceTools.wavpol","text":"wavpol(ct, X; nfft=256, noverlap=nfft÷2, bin_freq=3)\n\nPerform polarization analysis of n-component time series data.\n\nAssumes the data are in a right-handed, field-aligned coordinate system  (with Z along the ambient magnetic field).\n\nFor each FFT window (with specified overlap), the routine:\n\nComputes the FFT and constructs the spectral matrix S(f).\nApplies frequency smoothing using a window (of length bin_freq).\nComputes the wave power, degree of polarization, wave normal angle, ellipticity, and helicity.\n\nArguments\n\nct: Time vector.\nX: Field components (where each column is a component).\nKeyword arguments:\nnfft: Number of FFT points (default 256).\nnoverlap: Step between successive FFT windows (default nfft÷2).\nbin_freq: Number of frequency bins for smoothing (default 3; will be made odd if needed).\n\nReturns\n\nA tuple: where each parameter (except freqline) is an array with one row per FFT window.\n\n\n\n\n\n","category":"function"},{"location":"explanations/waves/","page":"Wave","title":"Wave","text":"For validation against PySPEDAS, see Wave polarization section in Validation with PySPEDAS.","category":"page"},{"location":"examples/speasy/#Complex-requests-and-flexible-layout","page":"Complex requests and flexible layout","title":"Complex requests and flexible layout","text":"","category":"section"},{"location":"examples/speasy/","page":"Complex requests and flexible layout","title":"Complex requests and flexible layout","text":"Visualize multiple time series in a customized layout.","category":"page"},{"location":"examples/speasy/#Get-data-with-Speasy","page":"Complex requests and flexible layout","title":"Get data with Speasy","text":"","category":"section"},{"location":"examples/speasy/","page":"Complex requests and flexible layout","title":"Complex requests and flexible layout","text":"using Speasy\nspz = speasy\n\nusing CairoMakie\nusing DimensionalData\nusing SpaceTools\nusing Dates","category":"page"},{"location":"examples/speasy/#A-complex-requests","page":"Complex requests and flexible layout","title":"A complex requests","text":"","category":"section"},{"location":"examples/speasy/","page":"Complex requests and flexible layout","title":"Complex requests and flexible layout","text":"data = let intervals = [\"2019-01-02T15\", \"2019-01-02T16\"]\n    products = [\n        spz.inventories.tree.cda.MMS.MMS1.FGM.MMS1_FGM_SRVY_L2.mms1_fgm_b_gse_srvy_l2_clean,\n        spz.inventories.tree.cda.MMS.MMS1.SCM.MMS1_SCM_SRVY_L2_SCSRVY.mms1_scm_acb_gse_scsrvy_srvy_l2,\n        spz.inventories.tree.cda.MMS.MMS1.DES.MMS1_FPI_FAST_L2_DES_MOMS.mms1_des_bulkv_gse_fast,\n        spz.inventories.tree.cda.MMS.MMS1.DES.MMS1_FPI_FAST_L2_DES_MOMS.mms1_des_temppara_fast,\n        spz.inventories.tree.cda.MMS.MMS1.DES.MMS1_FPI_FAST_L2_DES_MOMS.mms1_des_tempperp_fast,\n        spz.inventories.tree.cda.MMS.MMS1.DES.MMS1_FPI_FAST_L2_DES_MOMS.mms1_des_energyspectr_omni_fast,\n        spz.inventories.tree.cda.MMS.MMS1.DIS.MMS1_FPI_FAST_L2_DIS_MOMS.mms1_dis_energyspectr_omni_fast\n    ]\n    get_data(products, intervals)\nend","category":"page"},{"location":"examples/speasy/#Plotting-multiple-time-series-on-a-single-figure","page":"Complex requests and flexible layout","title":"Plotting multiple time series on a single figure","text":"","category":"section"},{"location":"examples/speasy/","page":"Complex requests and flexible layout","title":"Complex requests and flexible layout","text":"let figure = (; size=(1200, 1200)), add_title = true\n    f = Figure(; figure...)\n    tplot(f[1, 1], data[1:3]; add_title)\n    tplot(f[1, 2], [data[4:5], data[6:7]...]; add_title)\n    f\nend","category":"page"},{"location":"tutorials/getting-started/#Quickstart","page":"Quickstart","title":"Quickstart","text":"","category":"section"},{"location":"tutorials/getting-started/#Get-data-with-Speasy","page":"Quickstart","title":"Get data with Speasy","text":"","category":"section"},{"location":"tutorials/getting-started/","page":"Quickstart","title":"Quickstart","text":"using Speasy: get_data\nusing SpaceTools\n\n# da = get_data(\"amda/imf\", \"2016-6-2\", \"2016-6-5\")\nda = get_data(\"cda/OMNI_HRO_1MIN/Pressure\", \"2016-6-2\", \"2016-6-5\")","category":"page"},{"location":"tutorials/getting-started/#Plot-the-data","page":"Quickstart","title":"Plot the data","text":"","category":"section"},{"location":"tutorials/getting-started/","page":"Quickstart","title":"Quickstart","text":"tplot([da])","category":"page"},{"location":"explanations/smooth/#Averaging-and-smoothing","page":"Averaging and smoothing","title":"Averaging and smoothing","text":"","category":"section"},{"location":"explanations/smooth/","page":"Averaging and smoothing","title":"Averaging and smoothing","text":"smooth","category":"page"},{"location":"explanations/smooth/#SpaceTools.smooth","page":"Averaging and smoothing","title":"SpaceTools.smooth","text":"smooth(da::AbstractDimArray, window; dim=Ti, suffix=\"_smoothed\", kwargs...)\n\nSmooths a time series by computing a moving average over a sliding window.\n\nThe size of the sliding window can be either:\n\nQuantity: A time duration that will be converted to number of samples based on data resolution\nInteger: Number of samples directly\n\nArguments\n\ndims=Ti: Dimension along which to perform smoothing (default: time dimension)\nsuffix=\"_smoothed\": Suffix to append to the variable name in output\nkwargs...: Additional arguments passed to RollingWindowArrays.rolling\n\n\n\n\n\n","category":"function"},{"location":"explanations/smooth/#Exponential-smoothing","page":"Averaging and smoothing","title":"Exponential smoothing","text":"","category":"section"},{"location":"explanations/smooth/","page":"Averaging and smoothing","title":"Averaging and smoothing","text":"Wikipedia","category":"page"},{"location":"tutorials/outliers/#Remove-spikes-from-signal","page":"Remove spikes from signal","title":"Remove spikes from signal","text":"","category":"section"},{"location":"tutorials/outliers/","page":"Remove spikes from signal","title":"Remove spikes from signal","text":"The example data is a sine wave with random spikes.","category":"page"},{"location":"tutorials/outliers/","page":"Remove spikes from signal","title":"Remove spikes from signal","text":"using Random\n\n\"\"\"\n    create_sample_data()\n\nCreate a sine wave and add random positive and negative spikes.\nReturns a DataFrame with columns: `x`, `y`, `rand`, `spike_high`, `spike_low`, and `y_spikey`.\n\"\"\"\nfunction create_sample_data(; length=1000)\n    # Create x values and compute sine wave y values\n    x = range(0, stop=2π, length=length)\n    y = 2 .* sin.(x)\n\n    rands = rand(Xoshiro(1), length)\n\n    # random values above this trigger a spike:\n    RAND_HIGH = 0.98\n    # random values below this trigger a negative spike:\n    RAND_LOW = 0.02\n\n    # amplitude of the spikes:\n    spike_amplitudes =  0.1 .+ 10rand(Xoshiro(2), length)\n\n    # Create random spikes based on threshold conditions\n    spike_high = ifelse.(rands .> RAND_HIGH, 1, 0) .* spike_amplitudes\n    spike_low  = ifelse.(rands .< RAND_LOW, -1, 0) .* spike_amplitudes\n    n_spikes = sum(spike_high .!= 0) + sum(spike_low .!= 0)\n\n    y .+ spike_high .+ spike_low, n_spikes\nend\ny_spikey, n_spikes = create_sample_data()","category":"page"},{"location":"tutorials/outliers/","page":"Remove spikes from signal","title":"Remove spikes from signal","text":"By default, replace_outliers uses a threshold-detection approach based on the median absolute deviation (MAD) to detect spikes. It is also possible to use a filter-based approach (i.e. low-pass filtering).","category":"page"},{"location":"tutorials/outliers/","page":"Remove spikes from signal","title":"Remove spikes from signal","text":"using SpaceTools\nusing CairoMakie\nusing Test\n\ny_remove_outliers = replace_outliers(y_spikey, detector=find_spikes)\nn_removed = sum(isnan.(y_remove_outliers))\n@test n_removed == n_spikes\n\nbegin\n    f = Figure()\n    lines(f[1,1],y_spikey)\n    lines(f[2,1],y_remove_outliers)\n    f\nend","category":"page"},{"location":"tutorials/outliers/","page":"Remove spikes from signal","title":"Remove spikes from signal","text":"find_spikes\nreplace_outliers","category":"page"},{"location":"tutorials/outliers/#SpaceTools.find_spikes","page":"Remove spikes from signal","title":"SpaceTools.find_spikes","text":"find_spikes(data; threshold=3.0, window=0)\n\nIdentifies indices in data that are considered spikes\n\nFor multidimensional arrays, the function can be applied along a specific dimension using the dims parameter.\n\nArguments\n\nthreshold: Threshold multiplier for MAD to identify spikes (default: 3.0)\nwindow: Size of the moving window for local statistics (default: 16)\ndims: Dimension along which to find spikes (for multidimensional arrays)\n\nReturns\n\nFor 1D arrays: Vector of indices where spikes were detected\nFor multidimensional arrays: Dictionary mapping dimension indices to spike indices\n\nSee also: find_spikes_1d_mad\n\n\n\n\n\n","category":"function"},{"location":"tutorials/outliers/#SpaceTools.replace_outliers","page":"Remove spikes from signal","title":"SpaceTools.replace_outliers","text":"replace_outliers(data; detector=find_spikes, replacement_fn=nothing, kwargs...)\n\nReplaces outliers in data using replacement_fn.\n\nA detector function (by default, find_spikes) is used to identify outlier indices. \n\nA replacement_fn function can be supplied to define how to correct each spike: \n\nIt should takes (data, index) and returns a replacement value;\nIf not provided, the default is to replace with NaN.\n\nFor multidimensional arrays, the dims parameter specifies the dimension along which to detect and replace outliers.\n\nSee also: find_spikes\n\n\n\n\n\n","category":"function"},{"location":"examples/#Overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"This page contains a set of examples for you to start with.","category":"page"},{"location":"examples/","page":"Overview","title":"Overview","text":"Basic interactive tplot\nInteractive tplot with Speasy\nSpeasy example","category":"page"},{"location":"examples/#Examples-in-the-wild","page":"Overview","title":"Examples in the wild","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"Blog post\nEPSS 261 - Data Analysis Methods in Space Physics","category":"page"},{"location":"examples/interactive_speasy/#Interactive-tplot-with-Speasy","page":"Interactive tplot with Speasy","title":"Interactive tplot with Speasy","text":"","category":"section"},{"location":"examples/interactive_speasy/#Visual-exploration-of-OMNI-data","page":"Interactive tplot with Speasy","title":"Visual exploration of OMNI data","text":"","category":"section"},{"location":"examples/interactive_speasy/#tplot-with-Speasy-product-ID-strings","page":"Interactive tplot with Speasy","title":"tplot with Speasy product ID strings","text":"","category":"section"},{"location":"examples/interactive_speasy/","page":"Interactive tplot with Speasy","title":"Interactive tplot with Speasy","text":"using Speasy\nusing SpaceTools\nusing Dates\nusing CairoMakie\n\nt0 = DateTime(\"2008-09-05T10:00:00\")\nt1 = DateTime(\"2008-09-05T22:00:00\")\ntvars = [\n    \"cda/OMNI_HRO_1MIN/flow_speed\",\n    \"cda/OMNI_HRO_1MIN/E\",\n    \"cda/OMNI_HRO_1MIN/Pressure\"\n]\nf, axes = tplot(tvars, t0, t1)","category":"page"},{"location":"examples/interactive_speasy/#Interactive-tplot","page":"Interactive tplot with Speasy","title":"Interactive tplot","text":"","category":"section"},{"location":"examples/interactive_speasy/","page":"Interactive tplot with Speasy","title":"Interactive tplot with Speasy","text":"Here we simulate a user interacting with the plot by progressively zooming out in time with tlims!. Note: For real-time interactivity, consider using the GLMakie backend instead of CairoMakie.","category":"page"},{"location":"examples/interactive_speasy/","page":"Interactive tplot with Speasy","title":"Interactive tplot with Speasy","text":"dt = Hour(12)\n\nrecord(f, \"interactive_speasy.mp4\", 1:5; framerate=1) do n\n    tlims!(t0 - n * dt, t1 + n * dt)\n    sleep(1)\nend","category":"page"},{"location":"examples/interactive_speasy/","page":"Interactive tplot with Speasy","title":"Interactive tplot with Speasy","text":"<video autoplay loop muted playsinline controls src=\"../interactive_speasy.mp4\" />","category":"page"},{"location":"api/#API-Reference","page":"API","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Pages = [\"api.md]","category":"page"},{"location":"api/","page":"API","title":"API","text":"SpaceTools.DEFAULTS","category":"page"},{"location":"api/#SpaceTools.DEFAULTS","page":"API","title":"SpaceTools.DEFAULTS","text":"SpaceTools.DEFAULTS\n\nA global constant that holds default parameters:\n\nadd_title::Bool defaults to false.\nadd_colorbar::Bool defaults to true.\ndelay : in seconds, the time interval between updates. Default is 0.25.\n\n\n\n\n\n","category":"constant"},{"location":"api/","page":"API","title":"API","text":"Modules = [SpaceTools]\nOrder   = [:function, :type]","category":"page"},{"location":"api/#Base.:∘-Tuple{Function, AbstractProduct}","page":"API","title":"Base.:∘","text":"Create a new product with the composed function\n\n\n\n\n\n","category":"method"},{"location":"api/#Base.angle-Tuple{AbstractVector, AbstractVector}","page":"API","title":"Base.angle","text":"Return the angle between two vectors.\n\n\n\n\n\n","category":"method"},{"location":"api/#InteractiveViz.iviz-Tuple{Any, SpaceTools.RangeFunction1D}","page":"API","title":"InteractiveViz.iviz","text":"Remove the resolution-based updates and only update based on axis limit to improve performance\n\n\n\n\n\n","category":"method"},{"location":"api/#MakieCore.convert_arguments-Tuple{Type{<:MakieCore.Plot{SpaceTools.linesplot}}, AbstractVector{<:Number}}","page":"API","title":"MakieCore.convert_arguments","text":"Convert the vector into a single-column matrix\n\n\n\n\n\n","category":"method"},{"location":"api/#MakieCore.convert_arguments-Tuple{Type{<:MakieCore.Plot{SpaceTools.linesplot}}, Union{Tuple, AbstractVector}}","page":"API","title":"MakieCore.convert_arguments","text":"Convert the vector of vectors into a single vector of curves\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.B_x3_error-NTuple{8, Any}","page":"API","title":"SpaceTools.B_x3_error","text":"Calculate the composite statistical error estimate for ⟨B·x₃⟩: |Δ⟨B·x₃⟩| = √(λ₃/(M-1) + (Δφ₃₂⟨B⟩·x₂)² + (Δφ₃₁⟨B⟩·x₁)²)\n\nParameters:\n\nλ₁, λ₂, λ₃: eigenvalues in descending order\nM: number of samples\nB: mean magnetic field vector\nx₁, x₂, x₃: eigenvectors\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.ConstantThicknessApproach-Tuple{Any, Any, Any}","page":"API","title":"SpaceTools.ConstantThicknessApproach","text":"Constant Thickness Approach (CTA) for determining boundary normal and velocity. Based on the method described in Haaland et al., Annales Geophysicae, 2004.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.ConstantVelocityApproach-Tuple{Any, Any, Any}","page":"API","title":"SpaceTools.ConstantVelocityApproach","text":"ConstantVelocityApproach(positions, times, durations)\n\nGiven durations of the boundary crossings, calculate the thickness of the boundary\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.ConstantVelocityApproach-Tuple{Any, Any}","page":"API","title":"SpaceTools.ConstantVelocityApproach","text":"CVA(positions, times)\n\nConstant Velocity Approach (CVA) for determining boundary normal and velocity. Solve timing equation: D * m = Δts\n\nParameters:\n\npositions: Positions of 4 spacecraft (4×3 array)\ntimes: Times of boundary crossing for each spacecraft\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.DiscontinuityAnalyzer","page":"API","title":"SpaceTools.DiscontinuityAnalyzer","text":"Discontinuity Analyzer (DA) for analyzing properties of discontinuities using multi-spacecraft measurements.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools._linear_binedges-Tuple{Any}","page":"API","title":"SpaceTools._linear_binedges","text":"_linear_binedges(centers)\n\nCalculate bin edges assuming linear spacing.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.add_labels!-Tuple{Any}","page":"API","title":"SpaceTools.add_labels!","text":"Add labels to a grid of layouts\n\nNotes\n\nSee tag_facet in egg for reference\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.add_labels!-Tuple{}","page":"API","title":"SpaceTools.add_labels!","text":"Add labels to a figure, automatically searching for blocks to label.\n\nNotes\n\nhttps://github.com/brendanjohnharris/Foresight.jl/blob/main/src/Layouts.jl#L2\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.add_legend!-Tuple{Any, Any}","page":"API","title":"SpaceTools.add_legend!","text":"Only add legend when the axis contains multiple labels\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.add_legend!-Tuple{Makie.AxisPlot}","page":"API","title":"SpaceTools.add_legend!","text":"Only add legend when the axis contains multiple labels\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.amap-Tuple{Any, DimensionalData.AbstractDimArray, DimensionalData.AbstractDimArray}","page":"API","title":"SpaceTools.amap","text":"amap(f, a, b)\n\nApply a function f to the intersection of a and b.\n\nhttps://github.com/rafaqz/DimensionalData.jl/issues/914\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.axis_attributes-Union{Tuple{AbstractArray{Q}}, Tuple{Q}} where Q<:Number","page":"API","title":"SpaceTools.axis_attributes","text":"Axis attributes for a time array\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.binedges-Tuple{Any}","page":"API","title":"SpaceTools.binedges","text":"binedges(centers; transform=identity)\n\nCalculate bin edges from bin centers. \n\nFor linear spacing, edges are placed halfway between centers.\nFor transformed spacing, edges are placed halfway between transformed centers.\n\nArguments\n\ntransform: Function to transform the space (e.g., log for logarithmic spacing)\n\nExample\n\ncenters = [1.0, 2.0, 3.0]\nedges = binedges(centers)               # Returns [0.5, 1.5, 2.5, 3.5]\nedges = binedges(centers, transform=log)  # Returns edges in log space\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.check_mva_mat-Tuple{Any}","page":"API","title":"SpaceTools.check_mva_mat","text":"check_mva_mat(F; r=5, verbose=false)\n\nCheck the quality of the MVA result. \n\nIf λ₁ ≥ λ₂ ≥ λ₃ are 3 eigenvalues of the constructed matrix M, then a good indicator of nice fitting LMN coordinate system should have λ₂ / λ₃ > r.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.compute_polarization_parameters-Tuple{Any}","page":"API","title":"SpaceTools.compute_polarization_parameters","text":"compute_polarization_parameters(S)\n\nCompute the following polarization parameters from the spectral matrix S:\n\nWave Power: textpower = mathrmtr(S).\nDegree of Polarization: see polarization.\nWave Normal Angle: see wave_normal_angle.\nEllipticity and Helicity: see wpol_helicity.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.dropna-Tuple{DimensionalData.DimArray, Any}","page":"API","title":"SpaceTools.dropna","text":"dropna(da::DimArray, query)\n\nRemove slices containing NaN values along dimensions other than query.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.dualplot","page":"API","title":"SpaceTools.dualplot","text":"No docstring defined.\n\nPlot type\n\nThe plot type alias for the dualplot function is DualPlot.\n\nAttributes\n\ncolor2 =  (Makie.wong_colors())[end - 1]  — No docs available.\n\nlinestyle2 =  :dash  — No docs available.\n\nmarker2 =  :rect  — No docs available.\n\nplotfunc =  scatterlines!  — No docs available.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.dualplot!","page":"API","title":"SpaceTools.dualplot!","text":"dualplot! is the mutating variant of plotting function dualplot. Check the docstring for dualplot for further information.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.dualplot-Tuple{Any, Any, Any, Function, Vararg{Any}}","page":"API","title":"SpaceTools.dualplot","text":"Setup the panel with both primary and secondary y-axes\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.ensure_nxm-Tuple{Any, Any, Any}","page":"API","title":"SpaceTools.ensure_nxm","text":"Transform matrix-like A to n×m shape\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.fac_mat-Tuple{AbstractVector}","page":"API","title":"SpaceTools.fac_mat","text":"fac_mat(vec::AbstractVector; xref=[1.0, 0.0, 0.0])\n\nGenerates a field-aligned coordinate (FAC) transformation matrix for a vector.\n\nArguments\n\nvec: A 3-element vector representing the magnetic field\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.fill_gaps-Union{Tuple{T}, Tuple{AbstractVector{T}, Any}} where T","page":"API","title":"SpaceTools.fill_gaps","text":"fill_gaps(times, data; resolution, margin)\n\nGiven a sorted vector of time stamps times and corresponding data values, this function inserts missing time stamps with a value of NaN if the gap between consecutive time stamps is larger than resolution + margin.\n\nIf the gap is only slightly larger (within margin of the resolution), no gap is inserted.\nThe function supports numeric times or DateTime (with appropriate resolution types).\n\nArguments\n\ntimes: Sorted vector of time stamps.\nresolution: The expected time difference between consecutive time stamps.\nmargin: Allowed deviation from resolution before inserting missing time stamps.\n\nReturns\n\nA tuple (full_times, full_values) where:\n\nfull_times is a vector containing all time stamps (original and inserted).\nfull_values is a vector of data values with NaN for inserted gaps.\n\nReferences\n\nhttps://pyspedas.readthedocs.io/en/latest/modules/pytplot/tplotmath/degap.html\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.find_spikes-Tuple{Any}","page":"API","title":"SpaceTools.find_spikes","text":"find_spikes(data; threshold=3.0, window=0)\n\nIdentifies indices in data that are considered spikes\n\nFor multidimensional arrays, the function can be applied along a specific dimension using the dims parameter.\n\nArguments\n\nthreshold: Threshold multiplier for MAD to identify spikes (default: 3.0)\nwindow: Size of the moving window for local statistics (default: 16)\ndims: Dimension along which to find spikes (for multidimensional arrays)\n\nReturns\n\nFor 1D arrays: Vector of indices where spikes were detected\nFor multidimensional arrays: Dictionary mapping dimension indices to spike indices\n\nSee also: find_spikes_1d_mad\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.find_spikes_1d_mad-Tuple{Any}","page":"API","title":"SpaceTools.find_spikes_1d_mad","text":"find_spikes_1d_mad(data; threshold=3.0, window=0)\n\nIdentifies indices in data that are considered spikes based on a threshold multiplier of the median absolute deviation (MAD).\n\nWhen window is set to a positive integer, a moving window of that size is used to compute local MAD. Otherwise, global statistics are used.\n\nReferences\n\nWikipedia\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.format_datetime-Tuple{Any}","page":"API","title":"SpaceTools.format_datetime","text":"Format datetime ticks with time on top and date on bottom.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.functionplot","page":"API","title":"SpaceTools.functionplot","text":"No docstring defined.\n\nPlot type\n\nThe plot type alias for the functionplot function is FunctionPlot.\n\nAttributes\n\nplotfunc =  tplot_panel!  — No docs available.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.functionplot!","page":"API","title":"SpaceTools.functionplot!","text":"functionplot! is the mutating variant of plotting function functionplot. Check the docstring for functionplot for further information.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.functionplot!-NTuple{4, Any}","page":"API","title":"SpaceTools.functionplot!","text":"functionplot!(ax, f, tmin, tmax; kwargs...)\n\nInteractive plot of a function f on ax for a time range from tmin to tmax\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.functionplot-NTuple{4, Any}","page":"API","title":"SpaceTools.functionplot","text":"functionplot(gp, f, tmin, tmax; kwargs...)\n\nInteractively plot a function over a time range on a grid position\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.interpolate_nans-Tuple{Any, Any}","page":"API","title":"SpaceTools.interpolate_nans","text":"interpolate_nans(da; interp=LinearInterpolation)\n\nInterpolate only the NaN values in da along the specified dimension dims. Non-NaN values are preserved exactly as they are.\n\nThe default interpolation method interp is LinearInterpolation.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.linesplot","page":"API","title":"SpaceTools.linesplot","text":"No docstring defined.\n\nPlot type\n\nThe plot type alias for the linesplot function is LinesPlot.\n\nAttributes\n\nlabels =  nothing  — No docs available.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.linesplot!","page":"API","title":"SpaceTools.linesplot!","text":"linesplot! is the mutating variant of plotting function linesplot. Check the docstring for linesplot for further information.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.linesplot-Tuple{Union{GridLayoutBase.GridPosition, GridLayoutBase.GridSubposition, Makie.Figure}, Any}","page":"API","title":"SpaceTools.linesplot","text":"linesplot(gp, ta)\n\nPlot a multivariate time series on a panel\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.lingradest-NTuple{16, Any}","page":"API","title":"SpaceTools.lingradest","text":"lingradest(\n    Bx1, Bx2, Bx3, Bx4,\n    By1, By2, By3, By4,\n    Bz1, Bz2, Bz3, Bz4,\n    R1, R2, R3, R4\n)\n\nSPEDAS-argument-compatible version of lingradest.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.lingradest-NTuple{8, Any}","page":"API","title":"SpaceTools.lingradest","text":"lingradest(B1, B2, B3, B4, R1, R2, R3, R4)\n\nCompute spatial derivatives such as grad, div, curl and curvature using reciprocal vector technique (linear interpolation).\n\nArguments\n\nB1, B2, B3, B4: 3-element vectors giving magnetic field measurements at each probe\nR1, R2, R3, R4: 3-element vectors giving the probe positions\n\nReturns\n\nA named tuple containing:   • Rbary: Barycenter position   • Bbc: Magnetic field at the barycenter   • Bmag: Magnetic field magnitude at the barycenter   • LGBx, LGBy, LGBz: Linear gradient estimators for each component   • LD: Linear divergence estimator   • LCB: Linear curl estimator   • curvature: Field‐line curvature vector   • R_c: Field‐line curvature radius\n\nReferences\n\nBased on the method of Chanteur (ISSI, 1998, Ch. 11).\n\nlingradest.pro\nlingradest.py\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.lingradest-Tuple{DimensionalData.AbstractDimArray, Vararg{Any}}","page":"API","title":"SpaceTools.lingradest","text":"lingradest(B1::AbstractDimArray, args...)\n\nMethod for handling dimensional arrays. Takes AbstractDimArray inputs with a time dimension and returns a DimStack containing all computed quantities.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.lingradest-Tuple{Union{AbstractArray{<:AbstractVector}, AbstractMatrix}, Vararg{Any}}","page":"API","title":"SpaceTools.lingradest","text":"lingradest(B1::MatrixLike, args...)\n\nVectorized method for simplified usage. Returns a StructArray containing the results.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.m2nV-Tuple{Any}","page":"API","title":"SpaceTools.m2nV","text":"Convert slowness vector 𝐦 = 𝐧V to normal vector and velocity\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.make_secondary_axis!-Tuple{Any}","page":"API","title":"SpaceTools.make_secondary_axis!","text":"Create and configure a secondary y-axis\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.multiplot","page":"API","title":"SpaceTools.multiplot","text":"No docstring defined.\n\nPlot type\n\nThe plot type alias for the multiplot function is MultiPlot.\n\nAttributes\n\nplotfunc =  plot!  — No docs available.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.multiplot!","page":"API","title":"SpaceTools.multiplot!","text":"multiplot! is the mutating variant of plotting function multiplot. Check the docstring for multiplot for further information.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.multiplot!-Tuple{Makie.Axis, Any, Any, Any}","page":"API","title":"SpaceTools.multiplot!","text":"multiplot!(ax, fs, t0, t1; plotfunc=tplot_spec, kwargs...)\n\nSpecialized multiplot function for functionplot. Merge specs before plotting so as to cycle through them.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.multiplot-Tuple{Any, Any, Vararg{Any}}","page":"API","title":"SpaceTools.multiplot","text":"multiplot(gp, tas::MultiPlottable, args...; axis=(;), kwargs...)\n\nSetup the panel on a position and plot multiple time series on it\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.mva-Tuple{AbstractMatrix, AbstractMatrix}","page":"API","title":"SpaceTools.mva","text":"mva(V::AbstractMatrix, B::AbstractMatrix; kwargs...)\n\nRotate a timeseries V into the LMN coordinates based on the reference field B.\n\nArguments\n\nV::AbstractMatrix: The timeseries data to be transformed, where each column represents a component\nB::AbstractMatrix: The reference field used to determine the minimum variance directions, where each column represents a component\n\nSee also: mva_mat(Bx, By, Bz), rotate\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.mva_mat-Tuple{Any, Any, Any}","page":"API","title":"SpaceTools.mva_mat","text":"mva_mat(Bx, By, Bz; verbose=false)\n\nGenerates a LMN coordinate transformation matrix from 3 orthogonal vectors Bx, By, Bz.\n\nPerform minimum variance analysis to vector components defined in orthogonal coordinates Bx, By and Bz. Set check=true to check the reliability of the result.\n\nThe kth eigenvector can be obtained from the slice F.vectors[:, k].\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.nt2ds-Tuple{Any, Any}","page":"API","title":"SpaceTools.nt2ds","text":"nt2ds(nt_arr, dim; fields=propertynames(first(nt_arr)))\n\nConvert a NamedTuple array to a DimStack of DimArrays.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.panelplot","page":"API","title":"SpaceTools.panelplot","text":"No docstring defined.\n\nPlot type\n\nThe plot type alias for the panelplot function is PanelPlot.\n\nAttributes\n\ncolor =  @inherit linecolor  — No docs available.\n\ncycle =  [:color]  — No docs available.\n\nplotfunc =  plot!  — No docs available.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.panelplot!","page":"API","title":"SpaceTools.panelplot!","text":"panelplot! is the mutating variant of plotting function panelplot. Check the docstring for panelplot for further information.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.phase_factor-Tuple{Any}","page":"API","title":"SpaceTools.phase_factor","text":"Phase factor exp (i φ) satisfies the following equation\n\nexp (4 i φ) = exp (-2 i γ)\n\nwhere\n\nγ = arctan (2 Re(𝐮)^𝐓 Im(𝐮) (Re(𝐮)^2-Im(𝐮)^2))\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.plot_attributes-Tuple{DimensionalData.AbstractDimArray}","page":"API","title":"SpaceTools.plot_attributes","text":"Plot attributes for a time array (axis + labels)\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.plotfunc","page":"API","title":"SpaceTools.plotfunc","text":"Determine the plotting function for a given data type. Extend this for custom data types to integrate with the plotting system.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.plotfunc!","page":"API","title":"SpaceTools.plotfunc!","text":"Determine the plotting function for a given data type. Extend this for custom data types to integrate with the plotting system.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.plottype_attributes-Tuple{DimensionalData.AbstractDimArray}","page":"API","title":"SpaceTools.plottype_attributes","text":"Plot attributes for a time array (labels)\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.polarization-NTuple{4, Any}","page":"API","title":"SpaceTools.polarization","text":"polarization(S0, S1, S2, S3)\npolarization(S::StokesVector)\n\nCompute the degree of polarization (p) from Stoke parameters or a Stokes vector.\n\nReference\n\nWikipedia\nStokes parameters\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.polarization-Tuple{Any}","page":"API","title":"SpaceTools.polarization","text":"polarization(S)\n\nCompute the degree of polarization (DOP) p^2 from spectral matrix S.\n\nbeginaligned\np^2  = 1-frac(tr 𝐒)^2-(tr 𝐒^2)(tr 𝐒)^2-n^-1(tr 𝐒)^2 \n    = fracn(tr 𝐒^2)-(tr 𝐒)^2(n-1)(tr 𝐒)^2\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.position_tensor-Tuple{AbstractVector{<:AbstractVector}}","page":"API","title":"SpaceTools.position_tensor","text":"𝐑 = _α (𝐫_α-𝐫_b) (𝐫_α-𝐫_b) = _α 𝐫_α 𝐫_α-𝐫_b 𝐫_b\n\nwith 𝐫_b = _α 𝐫_α  N and N is the number of positions.\n\nReferences\n\nPaschmann and Daly [1] Paschmann & Daly, 2008. Section 4.7\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.pspectrum-Tuple{Union{TimeseriesTools.AbstractToolsArray{T, 1} where T, DimensionalData.AbstractDimVector}, SignalAnalysis.Spectrogram}","page":"API","title":"SpaceTools.pspectrum","text":"pspectrum(x::AbstractDimArray, spec::Spectrogram)\npspectrum(x::AbstractDimArray; nfft=256, noverlap=128, window=hamming)\n\nCompute the power spectrum (time-frequency representation) of a time series using the short-time Fourier transform.\n\nReturns a DimArray with frequency and original time dimensions.\n\nSee also: DSP.Spectrogram, DSP.stft\n\nReference\n\nMatlab\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.reciprocal_vector-NTuple{4, Any}","page":"API","title":"SpaceTools.reciprocal_vector","text":"reciprocal_vector(rα, rβ, rγ, rλ)\n\nCompute the reciprocal vector 𝒌_α for a vertex of a tetrahedron given the position vectors of all vertices.\n\nThe vertices (α, β, γ, λ) must form a cyclic permutation of (1, 2, 3, 4).\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.reciprocal_vector-Tuple{Any, AbstractVector{<:AbstractVector}}","page":"API","title":"SpaceTools.reciprocal_vector","text":"reciprocal_vector(rα, r0s::AbstractVector{<:AbstractVector})\n\nGeneralised reciprocal vector for N != 4\n\n𝐪_α = 𝐑^-1 𝐫_α\n\nSee also: reciprocal_vector, position_tensor\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.reciprocal_vector-Tuple{Any, Any, Any}","page":"API","title":"SpaceTools.reciprocal_vector","text":"reciprocal_vector(r_βα, r_βγ, r_βλ)\n\nCompute the reciprocal vector 𝒌_α for a vertex of a tetrahedron given the relative position vectors.\n\n𝒌_α = frac𝐫_βγ  𝐫_βλ𝐫_βα  (𝐫_βγ  𝐫_βλ)\n\nwhere 𝐫_αβ = r_β - r_α are relative position vectors.\n\nReferences\n\nMulti-spacecraft analysis methods revisited : 4.3 Properties of reciprocal vectors\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.reciprocal_vectors-NTuple{4, Any}","page":"API","title":"SpaceTools.reciprocal_vectors","text":"Compute the set of reciprocal vectors {𝒌_α}, which is also called the reciprocal base of the tetrahedron.\n\nSee also: reciprocal_vector\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.rectify_datetime-Tuple{Any}","page":"API","title":"SpaceTools.rectify_datetime","text":"Rectify the time step of a DimArray to be uniform.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.replace_outliers-Tuple{Any}","page":"API","title":"SpaceTools.replace_outliers","text":"replace_outliers(data; detector=find_spikes, replacement_fn=nothing, kwargs...)\n\nReplaces outliers in data using replacement_fn.\n\nA detector function (by default, find_spikes) is used to identify outlier indices. \n\nA replacement_fn function can be supplied to define how to correct each spike: \n\nIt should takes (data, index) and returns a replacement value;\nIf not provided, the default is to replace with NaN.\n\nFor multidimensional arrays, the dims parameter specifies the dimension along which to detect and replace outliers.\n\nSee also: find_spikes\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.resample","page":"API","title":"SpaceTools.resample","text":"resample(arr, n=10000; dim=1, verbose=false)\n\nResample an array along the dimension dim to n points. If the original length is less than or equal to n, the original array is returned unchanged.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.rotate-Tuple{AbstractMatrix, AbstractMatrix}","page":"API","title":"SpaceTools.rotate","text":"rotate(ts::AbstractMatrix, mat::AbstractMatrix)\n\nCoordinate-aware transformation of vector/matrix by rotation matrix(s) mat(s). Assume ts is a matrix of shape (n, 3).\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.set_coord-Tuple{Any, Any}","page":"API","title":"SpaceTools.set_coord","text":"Set the coordinate system.\n\nUpdates legend names and axis labels if they include the coordinate system. Also updates the dimension name if it contains the coordinate system.\n\nReference: \n\nhttps://pyspedas.readthedocs.io/en/latest/modules/pytplot/dataattgetterssetters.html#set_coords\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.set_if_equal!-Tuple{Any, Any, Any}","page":"API","title":"SpaceTools.set_if_equal!","text":"Set an attribute if all values are equal and non-empty\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.smooth-Tuple{DimensionalData.AbstractDimArray, Unitful.Quantity}","page":"API","title":"SpaceTools.smooth","text":"smooth(da::AbstractDimArray, window; dim=Ti, suffix=\"_smoothed\", kwargs...)\n\nSmooths a time series by computing a moving average over a sliding window.\n\nThe size of the sliding window can be either:\n\nQuantity: A time duration that will be converted to number of samples based on data resolution\nInteger: Number of samples directly\n\nArguments\n\ndims=Ti: Dimension along which to perform smoothing (default: time dimension)\nsuffix=\"_smoothed\": Suffix to append to the variable name in output\nkwargs...: Additional arguments passed to RollingWindowArrays.rolling\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.smooth_spectral_matrix-Tuple{Any, Vector{Float64}}","page":"API","title":"SpaceTools.smooth_spectral_matrix","text":"smooth_spectral_matrix(S, aa)\n\nSmooth the spectral matrix S(f) by applying a weighted average over frequency. The smoothing uses a symmetric window aa (for example, a Hamming window) of length M.\n\nArguments\n\nS: Spectral matrix array of size N_freq n n where n is the number of components.\naa: Weighting vector of length M.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.specplot","page":"API","title":"SpaceTools.specplot","text":"No docstring defined.\n\nPlot type\n\nThe plot type alias for the specplot function is SpecPlot.\n\nAttributes\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.specplot!","page":"API","title":"SpaceTools.specplot!","text":"specplot! is the mutating variant of plotting function specplot. Check the docstring for specplot for further information.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.specplot!-Tuple{Makie.Axis, Any}","page":"API","title":"SpaceTools.specplot!","text":"Plot heatmap of a time series on the same axis\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.specplot-Tuple{Any, Any}","page":"API","title":"SpaceTools.specplot","text":"specplot(gp, ta)\n\nPlot a spectrogram on a panel\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.spectral_matrix","page":"API","title":"SpaceTools.spectral_matrix","text":"spectral_matrix(X, window)\n\nCompute the spectral matrix S(f) defined by\n\nS_ij(f) = X_i(f) X_j^*(f)\n\nwhere X_i(f) is the FFT of the i-th component and * denotes complex conjugation.\n\nReturns a 3-D array of size N_freq n n, where N_freq = lfloor N2 rfloor      and n is the dimensionality (number of components).\n\nArguments\n\nX: Matrix where each column is a component of the multivariate time series, or a vector of vectors.\nwindow: A window function (optional). If not provided, a rectangular window (no windowing) is used.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.spectrogram_y_values-Tuple{Any}","page":"API","title":"SpaceTools.spectrogram_y_values","text":"spectrogram_y_values(ta; check=false, center=false, transform=identity)\n\nGet y-axis values from a spectrogram array. Can return either bin centers or edges. By default, return bin edges for better compatibility.\n\nArguments\n\ncheck: If true, check if values are constant along time\ncenter: If true, return bin centers instead of edges\ntransform: Optional transform function for edge calculation (e.g., log for logarithmic bins)\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tcross-Tuple{Any, Any}","page":"API","title":"SpaceTools.tcross","text":"References:\n\nhttps://docs.xarray.dev/en/stable/generated/xarray.cross.html\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tetrahedron_quality-Tuple{AbstractVector{<:AbstractVector}}","page":"API","title":"SpaceTools.tetrahedron_quality","text":"Calculate tetrahedron quality factors\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tfilter","page":"API","title":"SpaceTools.tfilter","text":"tfilter(da, Wn1, Wn2=samplingrate(da) / 2; designmethod=Butterworth(2))\n\nBy default, the max frequency corresponding to the Nyquist frequency is used.\n\nReferences\n\nhttps://docs.juliadsp.org/stable/filters/\nhttps://www.mathworks.com/help/signal/ref/filtfilt.html\nhttps://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.filtfilt.html\n\nIssues\n\nDSP.jl and Unitful.jl: https://github.com/JuliaDSP/DSP.jl/issues/431\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.tinterp-Tuple{Any, Any}","page":"API","title":"SpaceTools.tinterp","text":"tinterp(A, t; interp=LinearInterpolation)\n\nInterpolate time series A at time point(s) t. Returns interpolated value for single time point or DimArray for multiple time points.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tinterp-Tuple{Any, DimensionalData.AbstractDimArray}","page":"API","title":"SpaceTools.tinterp","text":"tinterp(A, B; interp=LinearInterpolation)\n\nInterpolate A to times in B\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tinterp_nans-Tuple{DimensionalData.AbstractDimArray}","page":"API","title":"SpaceTools.tinterp_nans","text":"tinterp_nans(da::AbstractDimArray; query=timeDimType, kwargs...)\n\nInterpolate only the NaN values in da along the specified dimensions query. Non-NaN values are preserved exactly as they are.\n\nSee also interpolate_nans\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tlines!-Tuple{Any, Any}","page":"API","title":"SpaceTools.tlines!","text":"Add vertical lines to a plot\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tmean-Tuple{AbstractVector{Dates.DateTime}}","page":"API","title":"SpaceTools.tmean","text":"https://github.com/JuliaLang/julia/issues/54542\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tnorm_combine-Tuple{Any}","page":"API","title":"SpaceTools.tnorm_combine","text":"tnorm_combine(x; dims=Ti, name=:magnitude)\n\nCalculate the norm of each slice along dimension dims and combine it with the original components.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tplot-Tuple{Union{GridLayoutBase.GridPosition, GridLayoutBase.GridSubposition, Makie.Figure}, Any, Vararg{Any}}","page":"API","title":"SpaceTools.tplot","text":"tplot(f, tas; legend=(; position=Right()), link_xaxes=true, link_yaxes=false, rowgap=5, transform=transform_pipeline, kwargs...)\n\nLay out multiple time series across different panels (rows) on one Figure / GridPosition f\n\nIf legend is nothing, no legend will be added to the plot. Otherwise, legend can be a NamedTuple containing options for legend placement and styling. By default, the time series are transformed via transform_pipeline, which is extensible via transform.\n\nSee also: tplot_panel, transform_pipeline, transform\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tplot_panel!-Tuple{Makie.Axis, Vararg{Any}}","page":"API","title":"SpaceTools.tplot_panel!","text":"tplot_panel!(ax, args...; kwargs...)\n\nGeneric entry point for adding plots to an existing axis ax.\n\nTransforms the arguments to appropriate types and calls the plotting function. Dispatches to appropriate implementation based on the plotting trait of the transformed arguments.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tplot_panel-Tuple{Any, Vararg{Any}}","page":"API","title":"SpaceTools.tplot_panel","text":"tplot_panel(gp, args...; kwargs...)\n\nGeneric entry point for plotting different types of data on a grid position gp.\n\nTransforms the arguments to appropriate types and calls the plotting function. Dispatches to appropriate implementation based on the plotting trait of the transformed arguments.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tplot_panel_s!-Tuple{Makie.Axis, Any}","page":"API","title":"SpaceTools.tplot_panel_s!","text":"tplot_panel_s!(ax::Axis, data; kwargs...)\n\nPlot data on an axis.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.transform-Tuple{Any}","page":"API","title":"SpaceTools.transform","text":"transform(args...; kwargs...)\n\nTransform data into plottable format (e.g., DimArray).\n\nExtend with transform(x::MyType) for custom types.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.transform_pipeline-Tuple{Any}","page":"API","title":"SpaceTools.transform_pipeline","text":"transform_pipeline(x)\n\nTransform data for plotting with the following pipeline:\n\nCustom transformations (transform(x))\nString -> SpeasyProduct\n\nSee also: transform\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tresample","page":"API","title":"SpaceTools.tresample","text":"tresample(da::DimArray, n=10000; dimtype=Ti)\n\nResample a DimArray specifically along its dimension of type dimtype to n points. Throws an error if no dimension of type dimtype is found in the array.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.tsheat-Tuple{DimensionalData.AbstractDimArray}","page":"API","title":"SpaceTools.tsheat","text":"tsheat(data; kwargs...)\n\nHeatmap with better default attributes for time series.\n\nReferences:\n\nhttps://docs.makie.org/stable/reference/plots/heatmap\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.tsplit","page":"API","title":"SpaceTools.tsplit","text":"tsplit(da::AbstractDimArray, dim=Ti)\n\nSplits up data along dimension dim.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpaceTools.tstack-Tuple{AbstractVector{<:AbstractVector}}","page":"API","title":"SpaceTools.tstack","text":"tstack(vectors::AbstractVector{<:AbstractVector{T}})\n\nStack a time series of vectors into a matrix. \n\nBy default, each row in the output matrix represents a time point from the input vector of vectors.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.twavpol-Tuple{Any}","page":"API","title":"SpaceTools.twavpol","text":"twavpol(x)\n\nA convenience wrapper around wavpol that works with DimensionalData arrays.\n\nIt automatically extracts the time dimension and returns the results as a DimStack with properly labeled dimensions.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.wave_normal_angle-Tuple{Any}","page":"API","title":"SpaceTools.wave_normal_angle","text":"Wave normal angle is the angle between (wnx, wny) and the vertical |wnz| Use the imaginary parts of off-diagonals. Define:A = Im(S₁₂) B = Im(S₁₃) C = Im(S₂₃)\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.wavpol-Tuple{Any, Any}","page":"API","title":"SpaceTools.wavpol","text":"wavpol(ct, X; nfft=256, noverlap=nfft÷2, bin_freq=3)\n\nPerform polarization analysis of n-component time series data.\n\nAssumes the data are in a right-handed, field-aligned coordinate system  (with Z along the ambient magnetic field).\n\nFor each FFT window (with specified overlap), the routine:\n\nComputes the FFT and constructs the spectral matrix S(f).\nApplies frequency smoothing using a window (of length bin_freq).\nComputes the wave power, degree of polarization, wave normal angle, ellipticity, and helicity.\n\nArguments\n\nct: Time vector.\nX: Field components (where each column is a component).\nKeyword arguments:\nnfft: Number of FFT points (default 256).\nnoverlap: Step between successive FFT windows (default nfft÷2).\nbin_freq: Number of frequency bins for smoothing (default 3; will be made odd if needed).\n\nReturns\n\nA tuple: where each parameter (except freqline) is an array with one row per FFT window.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.wpol_helicity-Tuple{AbstractMatrix{ComplexF64}, Number}","page":"API","title":"SpaceTools.wpol_helicity","text":"wpol_helicity(S, waveangle)\n\nCompute helicity and ellipticity for a single frequency.\n\nArguments\n\nS: Spectral matrix for a single frequency, size (3,3)\nwaveangle: Wave normal angle for this frequency\n\nReturns\n\nhelicity: Average helicity across the three components\nellipticity: Average ellipticity across the three components\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.x2t-Tuple{Dates.Millisecond}","page":"API","title":"SpaceTools.x2t","text":"Convert x to DateTime\n\nReference:\n\nhttps://docs.makie.org/dev/explanations/dim-converts#Makie.DateTimeConversion\nhttps://github.com/MakieOrg/Makie.jl/issues/442\nhttps://github.com/MakieOrg/Makie.jl/blob/master/src/dim-converts/dates-integration.jl\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.ys-Tuple{DimensionalData.DimMatrix{T} where T}","page":"API","title":"SpaceTools.ys","text":"permutedims is needed for series in Makie\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.Δφij-NTuple{4, Any}","page":"API","title":"SpaceTools.Δφij","text":"Δφij(λᵢ, λⱼ, λ₃, M)\n\nCalculate the phase error between components i and j according to: |Δφᵢⱼ| = |Δφⱼᵢ| = √(λ₃/(M-1) * (λᵢ + λⱼ - λ₃)/(λᵢ - λⱼ)²)\n\nParameters:\n\nλᵢ: eigenvalue i\nλⱼ: eigenvalue j\nλ₃: smallest eigenvalue (λ₃)\nM: number of samples\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.ω2f-Tuple{Any}","page":"API","title":"SpaceTools.ω2f","text":"Convert angular frequency to frequency\n\nReference: https://www.wikiwand.com/en/articles/Angular_frequency\n\n\n\n\n\n","category":"method"},{"location":"api/#SpaceTools.Debouncer","page":"API","title":"SpaceTools.Debouncer","text":"Debouncer\n\nA struct that creates a debounced version of a function f.\n\nThe debounced function will only execute after a specified delay (in seconds) of inactivity. If called again before the delay expires, the timer resets.\n\n\n\n\n\n","category":"type"},{"location":"api/#SpaceTools.DualAxisData","page":"API","title":"SpaceTools.DualAxisData","text":"DualAxisData(data1, data2; meta=nothing)\n\nA type for handling dual-axis data where each field represents data for a different axis. The first field is plotted against the left y-axis and the second field against the right y-axis.\n\nFields\n\ndata1: Data for the left y-axis\ndata2: Data for the right y-axis\nmetadata: Metadata for the data (e.g., title)\n\n\n\n\n\n","category":"type"},{"location":"api/#SpaceTools.DualPlot","page":"API","title":"SpaceTools.DualPlot","text":"DualPlot is the plot type associated with plotting function dualplot. Check the docstring for dualplot for further information.\n\n\n\n\n\n","category":"type"},{"location":"api/#SpaceTools.FunctionPlot","page":"API","title":"SpaceTools.FunctionPlot","text":"FunctionPlot is the plot type associated with plotting function functionplot. Check the docstring for functionplot for further information.\n\n\n\n\n\n","category":"type"},{"location":"api/#SpaceTools.LinesPlot","page":"API","title":"SpaceTools.LinesPlot","text":"LinesPlot is the plot type associated with plotting function linesplot. Check the docstring for linesplot for further information.\n\n\n\n\n\n","category":"type"},{"location":"api/#SpaceTools.MultiPlot","page":"API","title":"SpaceTools.MultiPlot","text":"MultiPlot is the plot type associated with plotting function multiplot. Check the docstring for multiplot for further information.\n\n\n\n\n\n","category":"type"},{"location":"api/#SpaceTools.PanelPlot","page":"API","title":"SpaceTools.PanelPlot","text":"PanelPlot is the plot type associated with plotting function panelplot. Check the docstring for panelplot for further information.\n\n\n\n\n\n","category":"type"},{"location":"api/#SpaceTools.SpecPlot","page":"API","title":"SpaceTools.SpecPlot","text":"SpecPlot is the plot type associated with plotting function specplot. Check the docstring for specplot for further information.\n\n\n\n\n\n","category":"type"},{"location":"explanations/tplot/#Tplot","page":"Tplot","title":"Tplot","text":"","category":"section"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"tplot is a versatile plotting utility that handles various time series formats including vectors, matrices, functions, and strings (product IDs). It renders data as line plots, series plots, heatmaps, or spectrograms.","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"tplot offers flexible visualization options, allowing you to display multiple time series either across separate panels or overlaid within the same panel.","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"tplot seamlessly integrates with Speasy.jl, automatically downloading and converting data to DimArray when given a product ID string.","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"Built on Makie, tplot provides both interactive exploration capabilities and publication-quality output. It features dynamic data loading during zoom/pan operations, efficiently retrieving and rendering data on demand.","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"tplot\ntplot_panel\ntplot_panel!","category":"page"},{"location":"explanations/tplot/#SpaceTools.tplot","page":"Tplot","title":"SpaceTools.tplot","text":"tplot(f, tas; legend=(; position=Right()), link_xaxes=true, link_yaxes=false, rowgap=5, transform=transform_pipeline, kwargs...)\n\nLay out multiple time series across different panels (rows) on one Figure / GridPosition f\n\nIf legend is nothing, no legend will be added to the plot. Otherwise, legend can be a NamedTuple containing options for legend placement and styling. By default, the time series are transformed via transform_pipeline, which is extensible via transform.\n\nSee also: tplot_panel, transform_pipeline, transform\n\n\n\n\n\n","category":"function"},{"location":"explanations/tplot/#SpaceTools.tplot_panel","page":"Tplot","title":"SpaceTools.tplot_panel","text":"tplot_panel(gp, args...; kwargs...)\n\nGeneric entry point for plotting different types of data on a grid position gp.\n\nTransforms the arguments to appropriate types and calls the plotting function. Dispatches to appropriate implementation based on the plotting trait of the transformed arguments.\n\n\n\n\n\n","category":"function"},{"location":"explanations/tplot/#SpaceTools.tplot_panel!","page":"Tplot","title":"SpaceTools.tplot_panel!","text":"tplot_panel!(ax, args...; kwargs...)\n\nGeneric entry point for adding plots to an existing axis ax.\n\nTransforms the arguments to appropriate types and calls the plotting function. Dispatches to appropriate implementation based on the plotting trait of the transformed arguments.\n\n\n\n\n\n","category":"function"},{"location":"explanations/tplot/#Function-as-tplot-argument-for-interactive-exploration","page":"Tplot","title":"Function as tplot argument for interactive exploration","text":"","category":"section"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"tplot can handle functions that accept time intervals as arguments. This allows for creating interactive plots where data is dynamically fetched. So instead of the two-step process:","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"Fetch data: da = f(t0, t1)\nPlot data: tplot(da)","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"We can combine these steps into a single command:","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"tplot(f, t0, t1)","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"This approach enables efficient interactive exploration of time series.","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"note: Note\nFor real-time interactivity, consider using the GLMakie backend instead of CairoMakie although it is possible to use tlims! or xlims! to update the plot dynamically.","category":"page"},{"location":"explanations/tplot/#Data-Transformation","page":"Tplot","title":"Data Transformation","text":"","category":"section"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"Before plotting, data goes through a transformation pipeline to ensure it's in a plottable format (e.g., DimArray).","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"SpaceTools.transform_pipeline\nSpaceTools.transform","category":"page"},{"location":"explanations/tplot/#SpaceTools.transform_pipeline","page":"Tplot","title":"SpaceTools.transform_pipeline","text":"transform_pipeline(x)\n\nTransform data for plotting with the following pipeline:\n\nCustom transformations (transform(x))\nString -> SpeasyProduct\n\nSee also: transform\n\n\n\n\n\n","category":"function"},{"location":"explanations/tplot/#SpaceTools.transform","page":"Tplot","title":"SpaceTools.transform","text":"transform(args...; kwargs...)\n\nTransform data into plottable format (e.g., DimArray).\n\nExtend with transform(x::MyType) for custom types.\n\n\n\n\n\n","category":"function"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"You can extend the transformation system by defining methods for your types:","category":"page"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"# Convert MyType to DimArray for plotting\ntransform(x::MyType) = DimArray(x.data)","category":"page"},{"location":"explanations/tplot/#Related-packages","page":"Tplot","title":"Related packages","text":"","category":"section"},{"location":"explanations/tplot/","page":"Tplot","title":"Tplot","text":"PyTplot\nInteractiveViz.jl\nSciQLop : A python application built on top of Qt to explore multivariate time series effortlessly,","category":"page"},{"location":"explanations/data/#Data-Formats-and-Retrieval","page":"Data Formats and Retrieval","title":"Data Formats and Retrieval","text":"","category":"section"},{"location":"explanations/data/","page":"Data Formats and Retrieval","title":"Data Formats and Retrieval","text":"We primarily uses DimensionalData.jl for data representation and processing. This approach provides a powerful and flexible way to work with multi-dimensional data in space physics applications.","category":"page"},{"location":"explanations/data/#DimensionalData","page":"Data Formats and Retrieval","title":"DimensionalData","text":"","category":"section"},{"location":"explanations/data/","page":"Data Formats and Retrieval","title":"Data Formats and Retrieval","text":"DimensionalData.jl provides labeled dimensions for Julia arrays, making it easier to work with complex scientific data. In SpaceTools.jl, we use two main types:","category":"page"},{"location":"explanations/data/","page":"Data Formats and Retrieval","title":"Data Formats and Retrieval","text":"DimArray: A multidimensional array with named dimensions\nDimStack: A collection of DimArrays that share some or all dimensions","category":"page"},{"location":"explanations/data/","page":"Data Formats and Retrieval","title":"Data Formats and Retrieval","text":"Metadata, including units, coordinate systems, and other relevant information, are automatically preserved when loading data from CDF files or web servers. This metadata is utilized /& preserved for subsequent processing, analysis, and visualization tasks.","category":"page"},{"location":"explanations/data/","page":"Data Formats and Retrieval","title":"Data Formats and Retrieval","text":"SpaceTools uses several standard dimensions for space physics data:","category":"page"},{"location":"explanations/data/","page":"Data Formats and Retrieval","title":"Data Formats and Retrieval","text":"Ti: Time dimension\n𝑓: Frequency dimension","category":"page"},{"location":"explanations/data/#Data-Retrieval","page":"Data Formats and Retrieval","title":"Data Retrieval","text":"","category":"section"},{"location":"explanations/data/","page":"Data Formats and Retrieval","title":"Data Formats and Retrieval","text":"SpaceTools supports retrieving data from multiple sources and automatically converting it to DimensionalData format:","category":"page"},{"location":"explanations/data/","page":"Data Formats and Retrieval","title":"Data Formats and Retrieval","text":"Speasy (preferred): a Python library for accessing space physics data. Integration is provided using the wrapper library Speasy.jl.\nPySPEDAS: Python-based Space Physics Environment Data Analysis Software. Integration is provided using the wrapper library PySPEDAS.jl.\nHAPI: Heliophysics Application Programmer’s Interface (HAPI) specification. Integration is provided using the wrapper library HAPIClient.jl.","category":"page"},{"location":"examples/tplot/#tplot-and-tplot_panel","page":"tplot and tplot_panel","title":"tplot and tplot_panel","text":"","category":"section"},{"location":"examples/tplot/","page":"tplot and tplot_panel","title":"tplot and tplot_panel","text":"The tplot system provides a unified interface for time series visualization:","category":"page"},{"location":"examples/tplot/","page":"tplot and tplot_panel","title":"tplot and tplot_panel","text":"tplot_panel: Creates single panel plots with support for multiple data types\ntplot: Combines multiple panels into a figure","category":"page"},{"location":"examples/tplot/","page":"tplot and tplot_panel","title":"tplot and tplot_panel","text":"Both functions are built on Makie's recipe system, allowing customization through plot attributes and functions.","category":"page"},{"location":"examples/tplot/","page":"tplot and tplot_panel","title":"tplot and tplot_panel","text":"using CairoMakie\nusing SpaceTools\nusing Unitful","category":"page"},{"location":"examples/tplot/#Flexible-and-composable-tplot_panel","page":"tplot and tplot_panel","title":"Flexible and composable tplot_panel","text":"","category":"section"},{"location":"examples/tplot/","page":"tplot and tplot_panel","title":"tplot and tplot_panel","text":"# Create sample data\nn = 24\ndata1 = rand(n) * 4u\"km/s\"  # Vector with units\ndata2 = rand(n) * 4u\"km/s\"  # Same units\ndata3 = rand(n) * 1u\"eV\"    # Different units\ndata4 = rand(n,4)           # Matrix (for heatmap)\n\nf = Figure()\n\n# Basic Plotting\ntplot_panel(f[1, 1], data1; axis=(;title=\"Single time series\"))\n\n# Multiple Series (same y-axis)\ntplot_panel(f[2, 1], [data1, data2]; axis=(;title=\"Multiple series\"), plotfunc=lines!)\n\n# Dual Y-Axes (different units)\ntplot_panel(f[3, 1], (data1, data3); axis=(;title=\"Dual y-axes\"), plotfunc=scatterlines!)\n\n# Matrix as series\ntplot_panel(f[1, 2], data4'; axis=(;title=\"Series\"), plotfunc=series!)\n\n# Overlay Series on Heatmap\ntplot_panel(f[2, 2], [data4, data1, data2]; axis=(;title=\"Heatmap with overlays\"))\n\n# XY Plot (non-time series)\ntplot_panel(f[3, 2], data2, data3; axis=(;title=\"XY plot (fallback)\"))\n\nf","category":"page"},{"location":"examples/tplot/#Combining-Multiple-Panels","page":"tplot and tplot_panel","title":"Combining Multiple Panels","text":"","category":"section"},{"location":"examples/tplot/","page":"tplot and tplot_panel","title":"tplot and tplot_panel","text":"You can also combine multiple panels into a single figure using tplot. By default, it links the x-axis of each panel and layouts the panels in a single column.","category":"page"},{"location":"examples/tplot/","page":"tplot and tplot_panel","title":"tplot and tplot_panel","text":"tvars = [\n    data1,                  \n    [data1, data2],        \n    (data1, data3),\n]\ntplot(tvars)","category":"page"},{"location":"examples/tplot/","page":"tplot and tplot_panel","title":"tplot and tplot_panel","text":"tplot also supports plotting on GridPosition and GridSubposition objects","category":"page"},{"location":"examples/tplot/","page":"tplot and tplot_panel","title":"tplot and tplot_panel","text":"f=Figure()\ntvars2 = [\n    data4,\n    [data4, data1, data2],\n    (data2, data3)\n]\ntplot(f[1,1], tvars)\ntplot(f[1,2], tvars2)\nf","category":"page"},{"location":"validation/pyspedas/#Validation-with-PySPEDAS","page":"Validation with PySPEDAS","title":"Validation with PySPEDAS","text":"","category":"section"},{"location":"validation/pyspedas/","page":"Validation with PySPEDAS","title":"Validation with PySPEDAS","text":"using PySPEDAS\nusing SpaceTools\nusing PythonCall\nusing DimensionalData\nusing PySPEDAS: get_data\nusing CairoMakie\nusing SpaceTools: tplot\nusing NaNMath\nusing Chairmarks","category":"page"},{"location":"validation/pyspedas/#Wave-polarization","page":"Validation with PySPEDAS","title":"Wave polarization","text":"","category":"section"},{"location":"validation/pyspedas/","page":"Validation with PySPEDAS","title":"Validation with PySPEDAS","text":"https://github.com/spedas/mms-examples/blob/master/advanced/WavepolarizationusingSCMdata.ipynb https://github.com/spedas/pyspedas/blob/master/pyspedas/analysis/tests/test_twavpol.py","category":"page"},{"location":"validation/pyspedas/","page":"Validation with PySPEDAS","title":"Validation with PySPEDAS","text":"@py import pyspedas.analysis.tests.test_twavpol: TwavpolDataValidation\nTwavpolDataValidation.setUpClass()\n\nthc_scf_fac = get_data(DimArray, \"thc_scf_fac\")\npy_tvars = [\n    \"thc_scf_fac_powspec\",\n    \"thc_scf_fac_degpol\",\n    \"thc_scf_fac_waveangle\",\n    \"thc_scf_fac_elliptict\",\n    \"thc_scf_fac_helict\",\n]\npy_result = get_data(DimStack, py_tvars)\nres = twavpol(thc_scf_fac)\n\nf = Figure(;size=(1200, 800))\ntplot(f[1,1], py_result)\ntplot(f[1,2], res)\nf","category":"page"},{"location":"validation/pyspedas/#Benchmark","page":"Validation with PySPEDAS","title":"Benchmark","text":"","category":"section"},{"location":"validation/pyspedas/","page":"Validation with PySPEDAS","title":"Validation with PySPEDAS","text":"@b twavpol(thc_scf_fac)\n@b pyspedas.twavpol(\"thc_scf_fac\")","category":"page"},{"location":"validation/pyspedas/","page":"Validation with PySPEDAS","title":"Validation with PySPEDAS","text":"Julia is about 100 times faster than Python.","category":"page"},{"location":"explanations/resampling/#Time-Series-Resampling-Methods","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"","category":"section"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"The adjustment of a segment of time-series data set to produce a segment of data which is scientifically equivalent but with data sample timing strictly simultaneous with that of another data set is called “resampling”. Paschmann and Daly [2], Chapter 2","category":"page"},{"location":"explanations/resampling/#Time-Series-Interpolation","page":"Time Series Resampling Methods","title":"Time Series Interpolation","text":"","category":"section"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"Flexible time series interpolation through the tinterp function.","category":"page"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"This function supports interpolation for both vector-like and matrix-like time series. Other features include:","category":"page"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"Returns scalar value for single time point interpolation\nReturns DimArray for multiple time points interpolation, preserving metadata and dimensions. \nCustomizable interpolation method through the interp keyword argument","category":"page"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"tinterp\ntinterp_nans\nresample\ntresample","category":"page"},{"location":"explanations/resampling/#SpaceTools.tinterp","page":"Time Series Resampling Methods","title":"SpaceTools.tinterp","text":"tinterp(A, t; interp=LinearInterpolation)\n\nInterpolate time series A at time point(s) t. Returns interpolated value for single time point or DimArray for multiple time points.\n\n\n\n\n\ntinterp(A, B; interp=LinearInterpolation)\n\nInterpolate A to times in B\n\n\n\n\n\n","category":"function"},{"location":"explanations/resampling/#SpaceTools.tinterp_nans","page":"Time Series Resampling Methods","title":"SpaceTools.tinterp_nans","text":"tinterp_nans(da::AbstractDimArray; query=timeDimType, kwargs...)\n\nInterpolate only the NaN values in da along the specified dimensions query. Non-NaN values are preserved exactly as they are.\n\nSee also interpolate_nans\n\n\n\n\n\n","category":"function"},{"location":"explanations/resampling/#SpaceTools.resample","page":"Time Series Resampling Methods","title":"SpaceTools.resample","text":"resample(arr, n=10000; dim=1, verbose=false)\n\nResample an array along the dimension dim to n points. If the original length is less than or equal to n, the original array is returned unchanged.\n\n\n\n\n\n","category":"function"},{"location":"explanations/resampling/#SpaceTools.tresample","page":"Time Series Resampling Methods","title":"SpaceTools.tresample","text":"tresample(da::DimArray, n=10000; dimtype=Ti)\n\nResample a DimArray specifically along its dimension of type dimtype to n points. Throws an error if no dimension of type dimtype is found in the array.\n\n\n\n\n\n","category":"function"},{"location":"explanations/resampling/#Basic-Usage","page":"Time Series Resampling Methods","title":"Basic Usage","text":"","category":"section"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"using SpaceTools\nusing Dates\nusing DataInterpolations\n\n# Interpolate at a single time point\nval = tinterp(time_series, DateTime(\"2023-01-01T12:00:00\"))\n\n# Interpolate at multiple time points\nnew_times = DateTime(\"2023-01-01\"):Hour(1):DateTime(\"2023-01-02\")\ninterpolated = tinterp(time_series, new_times; interp=CubicSpline)","category":"page"},{"location":"explanations/resampling/#Utilities","page":"Time Series Resampling Methods","title":"Utilities","text":"","category":"section"},{"location":"explanations/resampling/","page":"Time Series Resampling Methods","title":"Time Series Resampling Methods","text":"dropna\nrectify_datetime","category":"page"},{"location":"explanations/resampling/#SpaceTools.dropna","page":"Time Series Resampling Methods","title":"SpaceTools.dropna","text":"dropna(da::DimArray, query)\n\nRemove slices containing NaN values along dimensions other than query.\n\n\n\n\n\n","category":"function"},{"location":"explanations/resampling/#SpaceTools.rectify_datetime","page":"Time Series Resampling Methods","title":"SpaceTools.rectify_datetime","text":"Rectify the time step of a DimArray to be uniform.\n\n\n\n\n\n","category":"function"},{"location":"#SpaceTools.jl","page":"Home","title":"SpaceTools.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Build Status)","category":"page"},{"location":"","page":"Home","title":"Home","text":"A collection of tools for space physics / heliophysics: from data loading and processing to plotting and analysis.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(PackageSpec(url=\"https://github.com/Beforerr/SpaceTools.jl\"))","category":"page"},{"location":"#Related-packages","page":"Home","title":"Related packages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SPEDAS (IDL) / PySPEDAS : Space Physics Environment Data Analysis Software framework to support loading, plotting, analysis, and integration of data from a number of space- and ground-based observatories\nKamodo : An official NASA open-source python package built upon the functionalization of datasets\nspace-analysis.py : Python utils for data analysis in space physics.\nSpaceAnalysis.jl : Space physics analysis tool using Julia\nminimum variance analysis (MVA)\nspectral analysis\nmoving box average for filtering magnetometer data\ncoordinate transformations\nQSAS (C/C++) : Science Analysis Software for Space Plasmas","category":"page"},{"location":"","page":"Home","title":"Home","text":"⚠️ Development Status: This package is in active development. While functional, the API may undergo changes in future releases. Please review the documentation and test thoroughly before using in scientific work.","category":"page"},{"location":"","page":"Home","title":"Home","text":"📫 Contributing: We welcome contributions! If you're interested in collaborating or need assistance, please open an issue or reach out through our GitHub repository.","category":"page"},{"location":"#Explanations","page":"Home","title":"Explanations","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"explanations/coords.md\",\n    \"explanations/multispacecraft.md\",\n    \"explanations/tplot.md\",\n    \"explanations/resampling.md\"\n]\nDepth = 1","category":"page"},{"location":"explanations/coords/#Coordinate-Systems","page":"Coordinate Systems","title":"Coordinate Systems","text":"","category":"section"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"This package defines common coordinate systems used in heliophysics and space physics research.","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"Pages = [\"coords.md\"]\nDepth = 2:3","category":"page"},{"location":"explanations/coords/#Coordinate-Transformations","page":"Coordinate Systems","title":"Coordinate Transformations","text":"","category":"section"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"rotate","category":"page"},{"location":"explanations/coords/#SpaceTools.rotate-explanations-coords","page":"Coordinate Systems","title":"SpaceTools.rotate","text":"rotate(ts::AbstractMatrix, mat::AbstractMatrix)\n\nCoordinate-aware transformation of vector/matrix by rotation matrix(s) mat(s). Assume ts is a matrix of shape (n, 3).\n\n\n\n\n\n","category":"function"},{"location":"explanations/coords/#Standard-Coordinate-Systems","page":"Coordinate Systems","title":"Standard Coordinate Systems","text":"","category":"section"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"GSE (Geocentric Solar Ecliptic)\nGSM (Geocentric Solar Magnetic)\nGEI (Geocentric Equatorial Inertial)\nSM (Solar Magnetic)\nGEO (Geographic)\nJ2000","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"More information can be found in the the following links","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"https://stereo-ssc.nascom.nasa.gov/coordinates_explanation.shtml","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"note: Implementation Status\nTransformations between these coordinate systems are planned but not yet implemented.","category":"page"},{"location":"explanations/coords/#Specialized-Coordinate-Systems","page":"Coordinate Systems","title":"Specialized Coordinate Systems","text":"","category":"section"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"The package also provides transformations for analysis-specific coordinate systems:","category":"page"},{"location":"explanations/coords/#Field-Aligned-Coordinates-(FAC)","page":"Coordinate Systems","title":"Field-Aligned Coordinates (FAC)","text":"","category":"section"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"A local coordinate system defined relative to the ambient magnetic field direction, useful for studying plasma waves and particle distributions.","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"fac_mat","category":"page"},{"location":"explanations/coords/#SpaceTools.fac_mat-explanations-coords","page":"Coordinate Systems","title":"SpaceTools.fac_mat","text":"fac_mat(vec::AbstractVector; xref=[1.0, 0.0, 0.0])\n\nGenerates a field-aligned coordinate (FAC) transformation matrix for a vector.\n\nArguments\n\nvec: A 3-element vector representing the magnetic field\n\n\n\n\n\n","category":"function"},{"location":"explanations/coords/#Minimum-Variance-Analysis-(MVA)-and-Boundary-Normal-Coordinates-(LMN)","page":"Coordinate Systems","title":"Minimum Variance Analysis (MVA) and Boundary Normal Coordinates (LMN)","text":"","category":"section"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"A coordinate system derived from the eigenvalues and eigenvectors of the magnetic field variance matrix, commonly used in analyzing current sheets, discontinuities, and wave propagation.","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"References:","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"Minimum and Maximum Variance Analysis\nhttps://pyspedas.readthedocs.io/en/latest/coords.html#pyspedas.minvar","category":"page"},{"location":"explanations/coords/","page":"Coordinate Systems","title":"Coordinate Systems","text":"mva_mat\nmva\ncheck_mva_mat","category":"page"},{"location":"explanations/coords/#SpaceTools.mva_mat-explanations-coords","page":"Coordinate Systems","title":"SpaceTools.mva_mat","text":"mva_mat(Bx, By, Bz; verbose=false)\n\nGenerates a LMN coordinate transformation matrix from 3 orthogonal vectors Bx, By, Bz.\n\nPerform minimum variance analysis to vector components defined in orthogonal coordinates Bx, By and Bz. Set check=true to check the reliability of the result.\n\nThe kth eigenvector can be obtained from the slice F.vectors[:, k].\n\n\n\n\n\n","category":"function"},{"location":"explanations/coords/#SpaceTools.mva-explanations-coords","page":"Coordinate Systems","title":"SpaceTools.mva","text":"mva(V::AbstractMatrix, B::AbstractMatrix; kwargs...)\n\nRotate a timeseries V into the LMN coordinates based on the reference field B.\n\nArguments\n\nV::AbstractMatrix: The timeseries data to be transformed, where each column represents a component\nB::AbstractMatrix: The reference field used to determine the minimum variance directions, where each column represents a component\n\nSee also: mva_mat(Bx, By, Bz), rotate\n\n\n\n\n\n","category":"function"},{"location":"explanations/coords/#SpaceTools.check_mva_mat-explanations-coords","page":"Coordinate Systems","title":"SpaceTools.check_mva_mat","text":"check_mva_mat(F; r=5, verbose=false)\n\nCheck the quality of the MVA result. \n\nIf λ₁ ≥ λ₂ ≥ λ₃ are 3 eigenvalues of the constructed matrix M, then a good indicator of nice fitting LMN coordinate system should have λ₂ / λ₃ > r.\n\n\n\n\n\n","category":"function"}]
}
